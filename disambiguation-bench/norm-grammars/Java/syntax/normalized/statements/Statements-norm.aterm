Module(
  Unparameterized("normalized/statements/Statements-norm")
, [ Imports(
      [ Module(Unparameterized("normalized/classes/FieldDeclarations-norm"))
      , Module(Unparameterized("normalized/classes/MethodDeclarations-norm"))
      , Module(Unparameterized("normalized/lexical/Identifiers-norm"))
      , Module(Unparameterized("normalized/statements/Blocks-norm"))
      , Module(Unparameterized("normalized/names/Names-norm"))
      , Module(Unparameterized("normalized/types/ReferenceTypes-norm"))
      , Module(Unparameterized("normalized/expressions/Main-norm"))
      ]
    )
  ]
, [ SDFSection(
      Kernel(
        [ SdfProduction(
            Lit("\"if\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\105"))))
              , CharClass(Simple(Present(Numeric("\\102"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"else\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\101"))))
              , CharClass(Simple(Present(Numeric("\\108"))))
              , CharClass(Simple(Present(Numeric("\\115"))))
              , CharClass(Simple(Present(Numeric("\\101"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"for\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\102"))))
              , CharClass(Simple(Present(Numeric("\\111"))))
              , CharClass(Simple(Present(Numeric("\\114"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\",\"")
          , Rhs([CharClass(Simple(Present(Numeric("\\44"))))])
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\">\"")
          , Rhs([CharClass(Simple(Present(Numeric("\\62"))))])
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\">>\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\62"))))
              , CharClass(Simple(Present(Numeric("\\62"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"<\"")
          , Rhs([CharClass(Simple(Present(Numeric("\\60"))))])
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\">>>\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\62"))))
              , CharClass(Simple(Present(Numeric("\\62"))))
              , CharClass(Simple(Present(Numeric("\\62"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"assert\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\97"))))
              , CharClass(Simple(Present(Numeric("\\115"))))
              , CharClass(Simple(Present(Numeric("\\115"))))
              , CharClass(Simple(Present(Numeric("\\101"))))
              , CharClass(Simple(Present(Numeric("\\114"))))
              , CharClass(Simple(Present(Numeric("\\116"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"switch\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\115"))))
              , CharClass(Simple(Present(Numeric("\\119"))))
              , CharClass(Simple(Present(Numeric("\\105"))))
              , CharClass(Simple(Present(Numeric("\\116"))))
              , CharClass(Simple(Present(Numeric("\\99"))))
              , CharClass(Simple(Present(Numeric("\\104"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"{\"")
          , Rhs([CharClass(Simple(Present(Numeric("\\123"))))])
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"}\"")
          , Rhs([CharClass(Simple(Present(Numeric("\\125"))))])
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"case\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\99"))))
              , CharClass(Simple(Present(Numeric("\\97"))))
              , CharClass(Simple(Present(Numeric("\\115"))))
              , CharClass(Simple(Present(Numeric("\\101"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"default\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\100"))))
              , CharClass(Simple(Present(Numeric("\\101"))))
              , CharClass(Simple(Present(Numeric("\\102"))))
              , CharClass(Simple(Present(Numeric("\\97"))))
              , CharClass(Simple(Present(Numeric("\\117"))))
              , CharClass(Simple(Present(Numeric("\\108"))))
              , CharClass(Simple(Present(Numeric("\\116"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\":\"")
          , Rhs([CharClass(Simple(Present(Numeric("\\58"))))])
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"do\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\100"))))
              , CharClass(Simple(Present(Numeric("\\111"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"while\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\119"))))
              , CharClass(Simple(Present(Numeric("\\104"))))
              , CharClass(Simple(Present(Numeric("\\105"))))
              , CharClass(Simple(Present(Numeric("\\108"))))
              , CharClass(Simple(Present(Numeric("\\101"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"break\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\98"))))
              , CharClass(Simple(Present(Numeric("\\114"))))
              , CharClass(Simple(Present(Numeric("\\101"))))
              , CharClass(Simple(Present(Numeric("\\97"))))
              , CharClass(Simple(Present(Numeric("\\107"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"continue\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\99"))))
              , CharClass(Simple(Present(Numeric("\\111"))))
              , CharClass(Simple(Present(Numeric("\\110"))))
              , CharClass(Simple(Present(Numeric("\\116"))))
              , CharClass(Simple(Present(Numeric("\\105"))))
              , CharClass(Simple(Present(Numeric("\\110"))))
              , CharClass(Simple(Present(Numeric("\\117"))))
              , CharClass(Simple(Present(Numeric("\\101"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"return\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\114"))))
              , CharClass(Simple(Present(Numeric("\\101"))))
              , CharClass(Simple(Present(Numeric("\\116"))))
              , CharClass(Simple(Present(Numeric("\\117"))))
              , CharClass(Simple(Present(Numeric("\\114"))))
              , CharClass(Simple(Present(Numeric("\\110"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"synchronized\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\115"))))
              , CharClass(Simple(Present(Numeric("\\121"))))
              , CharClass(Simple(Present(Numeric("\\110"))))
              , CharClass(Simple(Present(Numeric("\\99"))))
              , CharClass(Simple(Present(Numeric("\\104"))))
              , CharClass(Simple(Present(Numeric("\\114"))))
              , CharClass(Simple(Present(Numeric("\\111"))))
              , CharClass(Simple(Present(Numeric("\\110"))))
              , CharClass(Simple(Present(Numeric("\\105"))))
              , CharClass(Simple(Present(Numeric("\\122"))))
              , CharClass(Simple(Present(Numeric("\\101"))))
              , CharClass(Simple(Present(Numeric("\\100"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"throw\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\116"))))
              , CharClass(Simple(Present(Numeric("\\104"))))
              , CharClass(Simple(Present(Numeric("\\114"))))
              , CharClass(Simple(Present(Numeric("\\111"))))
              , CharClass(Simple(Present(Numeric("\\119"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"catch\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\99"))))
              , CharClass(Simple(Present(Numeric("\\97"))))
              , CharClass(Simple(Present(Numeric("\\116"))))
              , CharClass(Simple(Present(Numeric("\\99"))))
              , CharClass(Simple(Present(Numeric("\\104"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"|\"")
          , Rhs([CharClass(Simple(Present(Numeric("\\124"))))])
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"try\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\116"))))
              , CharClass(Simple(Present(Numeric("\\114"))))
              , CharClass(Simple(Present(Numeric("\\121"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"(\"")
          , Rhs([CharClass(Simple(Present(Numeric("\\40"))))])
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\";\"")
          , Rhs([CharClass(Simple(Present(Numeric("\\59"))))])
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\")\"")
          , Rhs([CharClass(Simple(Present(Numeric("\\41"))))])
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"finally\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\102"))))
              , CharClass(Simple(Present(Numeric("\\105"))))
              , CharClass(Simple(Present(Numeric("\\110"))))
              , CharClass(Simple(Present(Numeric("\\97"))))
              , CharClass(Simple(Present(Numeric("\\108"))))
              , CharClass(Simple(Present(Numeric("\\108"))))
              , CharClass(Simple(Present(Numeric("\\121"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"=\"")
          , Rhs([CharClass(Simple(Present(Numeric("\\61"))))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(IterSep(Sort("Resource"), Lit("\";\"")))
          , Rhs([Cf(Sort("Resource"))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(IterSep(Sort("Resource"), Lit("\";\"")))
          , Rhs(
              [ Cf(IterSep(Sort("Resource"), Lit("\";\"")))
              , Cf(Opt(Layout()))
              , Lit("\";\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Resource"))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Cf(IterStarSep(Sort("Resource"), Lit("\";\"")))
          , Rhs([])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(IterStarSep(Sort("Resource"), Lit("\";\"")))
          , Rhs([Cf(IterSep(Sort("Resource"), Lit("\";\"")))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Iter(Sort("CatchTypeRest")))
          , Rhs([Cf(Sort("CatchTypeRest"))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Iter(Sort("CatchTypeRest")))
          , Rhs(
              [ Cf(Iter(Sort("CatchTypeRest")))
              , Cf(Opt(Layout()))
              , Cf(Sort("CatchTypeRest"))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(Cf(IterStar(Sort("CatchTypeRest"))), Rhs([]), NoAttrs())
        , SdfProduction(
            Cf(IterStar(Sort("CatchTypeRest")))
          , Rhs([Cf(Iter(Sort("CatchTypeRest")))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Iter(Sort("CatchClause")))
          , Rhs([Cf(Sort("CatchClause"))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Iter(Sort("CatchClause")))
          , Rhs(
              [ Cf(Iter(Sort("CatchClause")))
              , Cf(Opt(Layout()))
              , Cf(Sort("CatchClause"))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(Cf(IterStar(Sort("CatchClause"))), Rhs([]), NoAttrs())
        , SdfProduction(
            Cf(IterStar(Sort("CatchClause")))
          , Rhs([Cf(Iter(Sort("CatchClause")))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Iter(Sort("BlockStatement")))
          , Rhs([Cf(Sort("BlockStatement"))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Iter(Sort("BlockStatement")))
          , Rhs(
              [ Cf(Iter(Sort("BlockStatement")))
              , Cf(Opt(Layout()))
              , Cf(Sort("BlockStatement"))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(Cf(IterStar(Sort("BlockStatement"))), Rhs([]), NoAttrs())
        , SdfProduction(
            Cf(IterStar(Sort("BlockStatement")))
          , Rhs([Cf(Iter(Sort("BlockStatement")))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Iter(Sort("SwitchLabel")))
          , Rhs([Cf(Sort("SwitchLabel"))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Iter(Sort("SwitchLabel")))
          , Rhs(
              [ Cf(Iter(Sort("SwitchLabel")))
              , Cf(Opt(Layout()))
              , Cf(Sort("SwitchLabel"))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(Cf(IterStar(Sort("SwitchLabel"))), Rhs([]), NoAttrs())
        , SdfProduction(
            Cf(IterStar(Sort("SwitchLabel")))
          , Rhs([Cf(Iter(Sort("SwitchLabel")))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Iter(Sort("SwitchGroup")))
          , Rhs([Cf(Sort("SwitchGroup"))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Iter(Sort("SwitchGroup")))
          , Rhs(
              [ Cf(Iter(Sort("SwitchGroup")))
              , Cf(Opt(Layout()))
              , Cf(Sort("SwitchGroup"))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(Cf(IterStar(Sort("SwitchGroup"))), Rhs([]), NoAttrs())
        , SdfProduction(
            Cf(IterStar(Sort("SwitchGroup")))
          , Rhs([Cf(Iter(Sort("SwitchGroup")))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(IterSep(Sort("VarDecl"), Lit("\",\"")))
          , Rhs([Cf(Sort("VarDecl"))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(IterSep(Sort("VarDecl"), Lit("\",\"")))
          , Rhs(
              [ Cf(IterSep(Sort("VarDecl"), Lit("\",\"")))
              , Cf(Opt(Layout()))
              , Lit("\",\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("VarDecl"))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Cf(IterStarSep(Sort("VarDecl"), Lit("\",\"")))
          , Rhs([])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(IterStarSep(Sort("VarDecl"), Lit("\",\"")))
          , Rhs([Cf(IterSep(Sort("VarDecl"), Lit("\",\"")))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(IterSep(Sort("Expression"), Lit("\",\"")))
          , Rhs([Cf(Sort("Expression"))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(IterSep(Sort("Expression"), Lit("\",\"")))
          , Rhs(
              [ Cf(IterSep(Sort("Expression"), Lit("\",\"")))
              , Cf(Opt(Layout()))
              , Lit("\",\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expression"))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Cf(IterStarSep(Sort("Expression"), Lit("\",\"")))
          , Rhs([])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(IterStarSep(Sort("Expression"), Lit("\",\"")))
          , Rhs([Cf(IterSep(Sort("Expression"), Lit("\",\"")))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Iter(Sort("VariableModifier")))
          , Rhs([Cf(Sort("VariableModifier"))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Iter(Sort("VariableModifier")))
          , Rhs(
              [ Cf(Iter(Sort("VariableModifier")))
              , Cf(Opt(Layout()))
              , Cf(Sort("VariableModifier"))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(Cf(IterStar(Sort("VariableModifier"))), Rhs([]), NoAttrs())
        , SdfProduction(
            Cf(IterStar(Sort("VariableModifier")))
          , Rhs([Cf(Iter(Sort("VariableModifier")))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Opt(Sort("Expression")))
          , Rhs([Cf(Sort("Expression"))])
          , NoAttrs()
          )
        , SdfProduction(Cf(Opt(Sort("Expression"))), Rhs([]), NoAttrs())
        , SdfProduction(
            Cf(Opt(Layout()))
          , Rhs([Cf(Layout())])
          , NoAttrs()
          )
        , SdfProduction(Cf(Opt(Layout())), Rhs([]), NoAttrs())
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Statement")), Constructor("Labeled"))
          , Rhs(
              [ Cf(Sort("Id"))
              , Cf(Opt(Layout()))
              , Lit("\":\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Statement"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Statement")), Constructor("If"))
          , Rhs(
              [ Lit("\"if\"")
              , Cf(Opt(Layout()))
              , Lit("\"(\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expression"))
              , Cf(Opt(Layout()))
              , Lit("\")\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Statement"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Statement")), Constructor("IfElse"))
          , Rhs(
              [ Lit("\"if\"")
              , Cf(Opt(Layout()))
              , Lit("\"(\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expression"))
              , Cf(Opt(Layout()))
              , Lit("\")\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Statement"))
              , Cf(Opt(Layout()))
              , Lit("\"else\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Statement"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Statement")), Constructor("While"))
          , Rhs(
              [ Lit("\"while\"")
              , Cf(Opt(Layout()))
              , Lit("\"(\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expression"))
              , Cf(Opt(Layout()))
              , Lit("\")\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Statement"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Statement")), Constructor("For"))
          , Rhs(
              [ Lit("\"for\"")
              , Cf(Opt(Layout()))
              , Lit("\"(\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("ForInit"))
              , Cf(Opt(Layout()))
              , Lit("\";\"")
              , Cf(Opt(Layout()))
              , Cf(Opt(Sort("Expression")))
              , Cf(Opt(Layout()))
              , Lit("\";\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("ForUpdate"))
              , Cf(Opt(Layout()))
              , Lit("\")\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Statement"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Statement")), Constructor("ForEach"))
          , Rhs(
              [ Lit("\"for\"")
              , Cf(Opt(Layout()))
              , Lit("\"(\"")
              , Cf(Opt(Layout()))
              , Cf(IterStar(Sort("VariableModifier")))
              , Cf(Opt(Layout()))
              , Cf(Sort("UnannType"))
              , Cf(Opt(Layout()))
              , Cf(Sort("VarDeclId"))
              , Cf(Opt(Layout()))
              , Lit("\":\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expression"))
              , Cf(Opt(Layout()))
              , Lit("\")\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Statement"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("ForInit")), Constructor("ExprList"))
          , Rhs([Cf(IterStarSep(Sort("Expression"), Lit("\",\"")))])
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("ForInit")), Constructor("VarDecls"))
          , Rhs(
              [ Cf(IterStar(Sort("VariableModifier")))
              , Cf(Opt(Layout()))
              , Cf(Sort("UnannType"))
              , Cf(Opt(Layout()))
              , Cf(IterSep(Sort("VarDecl"), Lit("\",\"")))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("ForUpdate")), Constructor("ExprList"))
          , Rhs([Cf(IterStarSep(Sort("Expression"), Lit("\",\"")))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Sort("Statement"))
          , Rhs([Cf(Sort("Block"))])
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Statement")), Constructor("Empty"))
          , Rhs([Lit("\";\"")])
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Statement")), Constructor("ExpressionStatement"))
          , Rhs(
              [Cf(Sort("Expression")), Cf(Opt(Layout())), Lit("\";\"")]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Sort("Statement"))
          , Rhs(
              [ Cf(Sort("ExpressionName"))
              , Cf(Opt(Layout()))
              , Lit("\"<\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("ExpressionName"))
              , Cf(Opt(Layout()))
              , Lit("\">\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expression"))
              , Cf(Opt(Layout()))
              , Lit("\";\"")
              ]
            )
          , Attrs([Reject()])
          )
        , SdfProduction(
            Cf(Sort("Statement"))
          , Rhs(
              [ Cf(Sort("ExpressionName"))
              , Cf(Opt(Layout()))
              , Lit("\"<\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("ExpressionName"))
              , Cf(Opt(Layout()))
              , Lit("\"<\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("ExpressionName"))
              , Cf(Opt(Layout()))
              , Lit("\">>\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expression"))
              , Cf(Opt(Layout()))
              , Lit("\";\"")
              ]
            )
          , Attrs([Reject()])
          )
        , SdfProduction(
            Cf(Sort("Statement"))
          , Rhs(
              [ Cf(Sort("ExpressionName"))
              , Cf(Opt(Layout()))
              , Lit("\"<\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("ExpressionName"))
              , Cf(Opt(Layout()))
              , Lit("\"<\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("ExpressionName"))
              , Cf(Opt(Layout()))
              , Lit("\"<\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("ExpressionName"))
              , Cf(Opt(Layout()))
              , Lit("\">>>\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expression"))
              , Cf(Opt(Layout()))
              , Lit("\";\"")
              ]
            )
          , Attrs([Reject()])
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Statement")), Constructor("Assert"))
          , Rhs(
              [ Lit("\"assert\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expression"))
              , Cf(Opt(Layout()))
              , Lit("\";\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Statement")), Constructor("Assert"))
          , Rhs(
              [ Lit("\"assert\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expression"))
              , Cf(Opt(Layout()))
              , Lit("\":\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expression"))
              , Cf(Opt(Layout()))
              , Lit("\";\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Statement")), Constructor("Switch"))
          , Rhs(
              [ Lit("\"switch\"")
              , Cf(Opt(Layout()))
              , Lit("\"(\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expression"))
              , Cf(Opt(Layout()))
              , Lit("\")\"")
              , Cf(Opt(Layout()))
              , Lit("\"{\"")
              , Cf(Opt(Layout()))
              , Cf(IterStar(Sort("SwitchGroup")))
              , Cf(Opt(Layout()))
              , Cf(IterStar(Sort("SwitchLabel")))
              , Cf(Opt(Layout()))
              , Lit("\"}\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("SwitchGroup")), Constructor("SwitchGroup"))
          , Rhs(
              [ Cf(Iter(Sort("SwitchLabel")))
              , Cf(Opt(Layout()))
              , Cf(Iter(Sort("BlockStatement")))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("SwitchLabel")), Constructor("CaseExpr"))
          , Rhs(
              [ Lit("\"case\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expression"))
              , Cf(Opt(Layout()))
              , Lit("\":\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("SwitchLabel")), Constructor("Default"))
          , Rhs(
              [Lit("\"default\""), Cf(Opt(Layout())), Lit("\":\"")]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Statement")), Constructor("DoWhile"))
          , Rhs(
              [ Lit("\"do\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Statement"))
              , Cf(Opt(Layout()))
              , Lit("\"while\"")
              , Cf(Opt(Layout()))
              , Lit("\"(\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expression"))
              , Cf(Opt(Layout()))
              , Lit("\")\"")
              , Cf(Opt(Layout()))
              , Lit("\";\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Statement")), Constructor("Break"))
          , Rhs(
              [Lit("\"break\""), Cf(Opt(Layout())), Lit("\";\"")]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Statement")), Constructor("Break"))
          , Rhs(
              [ Lit("\"break\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Id"))
              , Cf(Opt(Layout()))
              , Lit("\";\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Statement")), Constructor("Continue"))
          , Rhs(
              [Lit("\"continue\""), Cf(Opt(Layout())), Lit("\";\"")]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Statement")), Constructor("Continue"))
          , Rhs(
              [ Lit("\"continue\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Id"))
              , Cf(Opt(Layout()))
              , Lit("\";\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Statement")), Constructor("Return"))
          , Rhs(
              [Lit("\"return\""), Cf(Opt(Layout())), Lit("\";\"")]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Statement")), Constructor("Return"))
          , Rhs(
              [ Lit("\"return\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expression"))
              , Cf(Opt(Layout()))
              , Lit("\";\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Statement")), Constructor("Synchronized"))
          , Rhs(
              [ Lit("\"synchronized\"")
              , Cf(Opt(Layout()))
              , Lit("\"(\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expression"))
              , Cf(Opt(Layout()))
              , Lit("\")\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Block"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Statement")), Constructor("Throw"))
          , Rhs(
              [ Lit("\"throw\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expression"))
              , Cf(Opt(Layout()))
              , Lit("\";\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Statement")), Constructor("Try"))
          , Rhs(
              [ Lit("\"try\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Block"))
              , Cf(Opt(Layout()))
              , Cf(Iter(Sort("CatchClause")))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Statement")), Constructor("TryFinally"))
          , Rhs(
              [ Lit("\"try\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Block"))
              , Cf(Opt(Layout()))
              , Cf(IterStar(Sort("CatchClause")))
              , Cf(Opt(Layout()))
              , Lit("\"finally\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Block"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("CatchClause")), Constructor("Catch"))
          , Rhs(
              [ Lit("\"catch\"")
              , Cf(Opt(Layout()))
              , Lit("\"(\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("CatchFormalParameter"))
              , Cf(Opt(Layout()))
              , Lit("\")\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Block"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("CatchFormalParameter")), Constructor("CatchParam"))
          , Rhs(
              [ Cf(IterStar(Sort("VariableModifier")))
              , Cf(Opt(Layout()))
              , Cf(Sort("CatchType"))
              , Cf(Opt(Layout()))
              , Cf(Sort("VarDeclId"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("CatchType")), Constructor("CatchType"))
          , Rhs(
              [ Cf(Sort("UnannClassType"))
              , Cf(Opt(Layout()))
              , Cf(IterStar(Sort("CatchTypeRest")))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("CatchTypeRest")), Constructor("CatchTypeElem"))
          , Rhs(
              [Lit("\"|\""), Cf(Opt(Layout())), Cf(Sort("ClassType"))]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Statement")), Constructor("TryWithResources"))
          , Rhs(
              [ Lit("\"try\"")
              , Cf(Opt(Layout()))
              , Lit("\"(\"")
              , Cf(Opt(Layout()))
              , Cf(IterStarSep(Sort("Resource"), Lit("\";\"")))
              , Cf(Opt(Layout()))
              , Lit("\")\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Block"))
              , Cf(Opt(Layout()))
              , Cf(IterStar(Sort("CatchClause")))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Statement")), Constructor("TryWithResourcesSemiColon"))
          , Rhs(
              [ Lit("\"try\"")
              , Cf(Opt(Layout()))
              , Lit("\"(\"")
              , Cf(Opt(Layout()))
              , Cf(IterStarSep(Sort("Resource"), Lit("\";\"")))
              , Cf(Opt(Layout()))
              , Lit("\";\"")
              , Cf(Opt(Layout()))
              , Lit("\")\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Block"))
              , Cf(Opt(Layout()))
              , Cf(IterStar(Sort("CatchClause")))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Statement")), Constructor("TryWithResources"))
          , Rhs(
              [ Lit("\"try\"")
              , Cf(Opt(Layout()))
              , Lit("\"(\"")
              , Cf(Opt(Layout()))
              , Cf(IterStarSep(Sort("Resource"), Lit("\";\"")))
              , Cf(Opt(Layout()))
              , Lit("\")\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Block"))
              , Cf(Opt(Layout()))
              , Cf(IterStar(Sort("CatchClause")))
              , Cf(Opt(Layout()))
              , Lit("\"finally\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Block"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Statement")), Constructor("TryWithResourcesSemiColon"))
          , Rhs(
              [ Lit("\"try\"")
              , Cf(Opt(Layout()))
              , Lit("\"(\"")
              , Cf(Opt(Layout()))
              , Cf(IterStarSep(Sort("Resource"), Lit("\";\"")))
              , Cf(Opt(Layout()))
              , Lit("\";\"")
              , Cf(Opt(Layout()))
              , Lit("\")\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Block"))
              , Cf(Opt(Layout()))
              , Cf(IterStar(Sort("CatchClause")))
              , Cf(Opt(Layout()))
              , Lit("\"finally\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Block"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Resource")), Constructor("Resource"))
          , Rhs(
              [ Cf(IterStar(Sort("VariableModifier")))
              , Cf(Opt(Layout()))
              , Cf(Sort("UnannType"))
              , Cf(Opt(Layout()))
              , Cf(Sort("VarDeclId"))
              , Cf(Opt(Layout()))
              , Lit("\"=\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expression"))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Layout())
          , Rhs([Cf(Layout()), Cf(Layout())])
          , Attrs([Assoc(Left())])
          )
        , SdfProduction(
            FileStart()
          , Rhs([Start(), CharClass(Simple(Present(Numeric("\\256"))))])
          , NoAttrs()
          )
        ]
      )
    )
  , SDFSection(
      Restrictions(
        [ Follow(
            [Lit("\"$ForInit\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$VarDecl\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$ForUpdate\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$ExpressionName\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$SwitchGroup\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$BlockStatement\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$SwitchLabel\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$Id\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$CatchFormalParameter\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$CatchType\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$UnannClassType\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$CatchTypeRest\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$ClassType\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$Statement\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$CatchClause\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$Block\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$Resource\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$VariableModifier\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$UnannType\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$VarDeclId\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$Expression\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        ]
      )
    )
  , SDFSection(
      Priorities(
        [ Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Statement")), Constructor("IfElse")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Statement")), Constructor("If")))
            ]
          )
        , Assoc(
            SimpleGroup(
              SdfProduction(
                Cf(Layout())
              , Rhs([Cf(Layout()), Cf(Layout())])
              , NoAttrs()
              )
            )
          , Left()
          , SimpleGroup(
              SdfProduction(
                Cf(Layout())
              , Rhs([Cf(Layout()), Cf(Layout())])
              , NoAttrs()
              )
            )
          )
        ]
      )
    )
  ]
)