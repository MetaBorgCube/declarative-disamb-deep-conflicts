Module(
  Unparameterized("normalized/ModuleTypes-norm")
, [ Imports(
      [ Module(Unparameterized("normalized/Lexical-norm"))
      , Module(Unparameterized("normalized/Classes-norm"))
      , Module(Unparameterized("normalized/Names-norm"))
      , Module(Unparameterized("normalized/TypesAndExceptions-norm"))
      , Module(Unparameterized("normalized/ModuleExpressions-norm"))
      , Module(Unparameterized("normalized/TypeExpr-norm"))
      ]
    )
  ]
, [ SDFSection(
      Kernel(
        [ SdfProduction(
            Lit("\"sig\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\115"))))
              , CharClass(Simple(Present(Numeric("\\105"))))
              , CharClass(Simple(Present(Numeric("\\103"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"end\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\101"))))
              , CharClass(Simple(Present(Numeric("\\110"))))
              , CharClass(Simple(Present(Numeric("\\100"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"functor\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\102"))))
              , CharClass(Simple(Present(Numeric("\\117"))))
              , CharClass(Simple(Present(Numeric("\\110"))))
              , CharClass(Simple(Present(Numeric("\\99"))))
              , CharClass(Simple(Present(Numeric("\\116"))))
              , CharClass(Simple(Present(Numeric("\\111"))))
              , CharClass(Simple(Present(Numeric("\\114"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\":\"")
          , Rhs([CharClass(Simple(Present(Numeric("\\58"))))])
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"->\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\45"))))
              , CharClass(Simple(Present(Numeric("\\62"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"of\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\111"))))
              , CharClass(Simple(Present(Numeric("\\102"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"(\"")
          , Rhs([CharClass(Simple(Present(Numeric("\\40"))))])
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\")\"")
          , Rhs([CharClass(Simple(Present(Numeric("\\41"))))])
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"with\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\119"))))
              , CharClass(Simple(Present(Numeric("\\105"))))
              , CharClass(Simple(Present(Numeric("\\116"))))
              , CharClass(Simple(Present(Numeric("\\104"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"and\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\97"))))
              , CharClass(Simple(Present(Numeric("\\110"))))
              , CharClass(Simple(Present(Numeric("\\100"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"type\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\116"))))
              , CharClass(Simple(Present(Numeric("\\121"))))
              , CharClass(Simple(Present(Numeric("\\112"))))
              , CharClass(Simple(Present(Numeric("\\101"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"=\"")
          , Rhs([CharClass(Simple(Present(Numeric("\\61"))))])
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"module\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\109"))))
              , CharClass(Simple(Present(Numeric("\\111"))))
              , CharClass(Simple(Present(Numeric("\\100"))))
              , CharClass(Simple(Present(Numeric("\\117"))))
              , CharClass(Simple(Present(Numeric("\\108"))))
              , CharClass(Simple(Present(Numeric("\\101"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\":=\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\58"))))
              , CharClass(Simple(Present(Numeric("\\61"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Opt(Sort("TypeParameters")))
          , Rhs([Cf(Sort("TypeParameters"))])
          , NoAttrs()
          )
        , SdfProduction(Cf(Opt(Sort("TypeParameters"))), Rhs([]), NoAttrs())
        , SdfProduction(
            Cf(Opt(Sort("TypeParams")))
          , Rhs([Cf(Sort("TypeParams"))])
          , NoAttrs()
          )
        , SdfProduction(Cf(Opt(Sort("TypeParams"))), Rhs([]), NoAttrs())
        , SdfProduction(
            Cf(IterSep(Sort("ModConstraint"), Lit("\"and\"")))
          , Rhs([Cf(Sort("ModConstraint"))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(IterSep(Sort("ModConstraint"), Lit("\"and\"")))
          , Rhs(
              [ Cf(IterSep(Sort("ModConstraint"), Lit("\"and\"")))
              , Cf(Opt(Layout()))
              , Lit("\"and\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("ModConstraint"))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Cf(IterStarSep(Sort("ModConstraint"), Lit("\"and\"")))
          , Rhs([])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(IterStarSep(Sort("ModConstraint"), Lit("\"and\"")))
          , Rhs([Cf(IterSep(Sort("ModConstraint"), Lit("\"and\"")))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Opt(Layout()))
          , Rhs([Cf(Layout())])
          , NoAttrs()
          )
        , SdfProduction(Cf(Opt(Layout())), Rhs([]), NoAttrs())
        , SdfProduction(
            Cf(Iter(Sort("DefinitionSemi")))
          , Rhs([Cf(Sort("DefinitionSemi"))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Iter(Sort("DefinitionSemi")))
          , Rhs(
              [ Cf(Iter(Sort("DefinitionSemi")))
              , Cf(Opt(Layout()))
              , Cf(Sort("DefinitionSemi"))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(Cf(IterStar(Sort("DefinitionSemi"))), Rhs([]), NoAttrs())
        , SdfProduction(
            Cf(IterStar(Sort("DefinitionSemi")))
          , Rhs([Cf(Iter(Sort("DefinitionSemi")))])
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("ModuleType")), Constructor("ModuleTypePath"))
          , Rhs([Cf(Sort("ModTypePath"))])
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("ModuleType")), Constructor("Signature"))
          , Rhs(
              [ Lit("\"sig\"")
              , Cf(Opt(Layout()))
              , Cf(IterStar(Sort("DefinitionSemi")))
              , Cf(Opt(Layout()))
              , Lit("\"end\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("ModuleType")), Constructor("Functor"))
          , Rhs(
              [ Lit("\"functor\"")
              , Cf(Opt(Layout()))
              , Lit("\"(\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("ModuleName"))
              , Cf(Opt(Layout()))
              , Lit("\":\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("ModuleType"))
              , Cf(Opt(Layout()))
              , Lit("\")\"")
              , Cf(Opt(Layout()))
              , Lit("\"->\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("ModuleType"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("ModuleType")), Constructor("ModuleTypeOf"))
          , Rhs(
              [ Lit("\"module\"")
              , Cf(Opt(Layout()))
              , Lit("\"type\"")
              , Cf(Opt(Layout()))
              , Lit("\"of\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("ModuleExpr"))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Sort("ModuleType"))
          , Rhs(
              [ Lit("\"(\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("ModuleType"))
              , Cf(Opt(Layout()))
              , Lit("\")\"")
              ]
            )
          , Attrs([Bracket()])
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("ModuleType")), Constructor("ModuleTypeWith"))
          , Rhs(
              [ Cf(Sort("ModuleType"))
              , Cf(Opt(Layout()))
              , Lit("\"with\"")
              , Cf(Opt(Layout()))
              , Cf(IterSep(Sort("ModConstraint"), Lit("\"and\"")))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("DefinitionSemi")), Constructor("Definition"))
          , Rhs(
              [Cf(Sort("Definition")), Cf(Opt(Layout())), Cf(Sort("DoubleSemiColonOpt"))]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("ModConstraint")), Constructor("ModConsType1"))
          , Rhs(
              [ Lit("\"type\"")
              , Cf(Opt(Layout()))
              , Cf(Opt(Sort("TypeParams")))
              , Cf(Opt(Layout()))
              , Cf(Sort("TypeConstr"))
              , Cf(Opt(Layout()))
              , Lit("\"=\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("TypeExpr"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("ModConstraint")), Constructor("ModConsType2"))
          , Rhs(
              [ Lit("\"type\"")
              , Cf(Opt(Layout()))
              , Cf(Opt(Sort("TypeParameters")))
              , Cf(Opt(Layout()))
              , Cf(Sort("TypeConstrName"))
              , Cf(Opt(Layout()))
              , Lit("\":=\"")
              , Cf(Opt(Layout()))
              , Cf(Opt(Sort("TypeParameters")))
              , Cf(Opt(Layout()))
              , Cf(Sort("TypeConstr"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("ModConstraint")), Constructor("ModeConsModule1"))
          , Rhs(
              [ Lit("\"module\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("ModulePath"))
              , Cf(Opt(Layout()))
              , Lit("\"=\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("ExtendedModulePath"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("ModConstraint")), Constructor("ModeConsModule2"))
          , Rhs(
              [ Lit("\"module\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("ModuleName"))
              , Cf(Opt(Layout()))
              , Lit("\":=\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("ExtendedModulePath"))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Layout())
          , Rhs([Cf(Layout()), Cf(Layout())])
          , Attrs([Assoc(Left())])
          )
        , SdfProduction(
            FileStart()
          , Rhs([Start(), CharClass(Simple(Present(Numeric("\\256"))))])
          , NoAttrs()
          )
        ]
      )
    )
  , SDFSection(
      Restrictions(
        [ Follow(
            [Lit("\"$ModTypePath\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$ModuleExpr\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$ModuleType\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$DefinitionSemi\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$Definition\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$DoubleSemiColonOpt\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$TypeParams\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$TypeExpr\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$TypeConstrName\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$TypeParameters\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$TypeConstr\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$ModulePath\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$ModConstraint\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$ModuleName\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$ExtendedModulePath\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        ]
      )
    )
  , SDFSection(
      Priorities(
        [ Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("ModuleType")), Constructor("ModuleTypeWith")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("ModuleType")), Constructor("Functor")))
            ]
          )
        , Assoc(
            SimpleGroup(
              SdfProduction(
                Cf(Layout())
              , Rhs([Cf(Layout()), Cf(Layout())])
              , NoAttrs()
              )
            )
          , Left()
          , SimpleGroup(
              SdfProduction(
                Cf(Layout())
              , Rhs([Cf(Layout()), Cf(Layout())])
              , NoAttrs()
              )
            )
          )
        ]
      )
    )
  ]
)