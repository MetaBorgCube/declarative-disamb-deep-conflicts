Module(
  Unparameterized("normalized/Expressions-norm")
, [ Imports(
      [ Module(Unparameterized("normalized/Lexical-norm"))
      , Module(Unparameterized("normalized/Names-norm"))
      , Module(Unparameterized("normalized/TypeExpr-norm"))
      , Module(Unparameterized("normalized/Patterns-norm"))
      , Module(Unparameterized("normalized/Extensions-norm"))
      , Module(Unparameterized("normalized/ModuleExpressions-norm"))
      , Module(Unparameterized("normalized/Classes-norm"))
      , Module(Unparameterized("normalized/TypesAndExceptions-norm"))
      ]
    )
  ]
, [ SDFSection(
      Kernel(
        [ SdfProduction(
            Lit("\"#\"")
          , Rhs([CharClass(Simple(Present(Numeric("\\35"))))])
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"lazy\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\108"))))
              , CharClass(Simple(Present(Numeric("\\97"))))
              , CharClass(Simple(Present(Numeric("\\122"))))
              , CharClass(Simple(Present(Numeric("\\121"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"assert\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\97"))))
              , CharClass(Simple(Present(Numeric("\\115"))))
              , CharClass(Simple(Present(Numeric("\\115"))))
              , CharClass(Simple(Present(Numeric("\\101"))))
              , CharClass(Simple(Present(Numeric("\\114"))))
              , CharClass(Simple(Present(Numeric("\\116"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"-.\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\45"))))
              , CharClass(Simple(Present(Numeric("\\46"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"::\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\58"))))
              , CharClass(Simple(Present(Numeric("\\58"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"!=\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\33"))))
              , CharClass(Simple(Present(Numeric("\\61"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\",\"")
          , Rhs([CharClass(Simple(Present(Numeric("\\44"))))])
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"<-\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\60"))))
              , CharClass(Simple(Present(Numeric("\\45"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"else\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\101"))))
              , CharClass(Simple(Present(Numeric("\\108"))))
              , CharClass(Simple(Present(Numeric("\\115"))))
              , CharClass(Simple(Present(Numeric("\\101"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"if\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\105"))))
              , CharClass(Simple(Present(Numeric("\\102"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"then\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\116"))))
              , CharClass(Simple(Present(Numeric("\\104"))))
              , CharClass(Simple(Present(Numeric("\\101"))))
              , CharClass(Simple(Present(Numeric("\\110"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"match\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\109"))))
              , CharClass(Simple(Present(Numeric("\\97"))))
              , CharClass(Simple(Present(Numeric("\\116"))))
              , CharClass(Simple(Present(Numeric("\\99"))))
              , CharClass(Simple(Present(Numeric("\\104"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"function\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\102"))))
              , CharClass(Simple(Present(Numeric("\\117"))))
              , CharClass(Simple(Present(Numeric("\\110"))))
              , CharClass(Simple(Present(Numeric("\\99"))))
              , CharClass(Simple(Present(Numeric("\\116"))))
              , CharClass(Simple(Present(Numeric("\\105"))))
              , CharClass(Simple(Present(Numeric("\\111"))))
              , CharClass(Simple(Present(Numeric("\\110"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"fun\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\102"))))
              , CharClass(Simple(Present(Numeric("\\117"))))
              , CharClass(Simple(Present(Numeric("\\110"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"try\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\116"))))
              , CharClass(Simple(Present(Numeric("\\114"))))
              , CharClass(Simple(Present(Numeric("\\121"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"rec\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\114"))))
              , CharClass(Simple(Present(Numeric("\\101"))))
              , CharClass(Simple(Present(Numeric("\\99"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"begin\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\98"))))
              , CharClass(Simple(Present(Numeric("\\101"))))
              , CharClass(Simple(Present(Numeric("\\103"))))
              , CharClass(Simple(Present(Numeric("\\105"))))
              , CharClass(Simple(Present(Numeric("\\110"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"{<\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\123"))))
              , CharClass(Simple(Present(Numeric("\\60"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\">}\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\62"))))
              , CharClass(Simple(Present(Numeric("\\125"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"[\"")
          , Rhs([CharClass(Simple(Present(Numeric("\\91"))))])
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"]\"")
          , Rhs([CharClass(Simple(Present(Numeric("\\93"))))])
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"[|\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\91"))))
              , CharClass(Simple(Present(Numeric("\\124"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"|]\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\124"))))
              , CharClass(Simple(Present(Numeric("\\93"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"{\"")
          , Rhs([CharClass(Simple(Present(Numeric("\\123"))))])
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"with\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\119"))))
              , CharClass(Simple(Present(Numeric("\\105"))))
              , CharClass(Simple(Present(Numeric("\\116"))))
              , CharClass(Simple(Present(Numeric("\\104"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"}\"")
          , Rhs([CharClass(Simple(Present(Numeric("\\125"))))])
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"while\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\119"))))
              , CharClass(Simple(Present(Numeric("\\104"))))
              , CharClass(Simple(Present(Numeric("\\105"))))
              , CharClass(Simple(Present(Numeric("\\108"))))
              , CharClass(Simple(Present(Numeric("\\101"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"for\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\102"))))
              , CharClass(Simple(Present(Numeric("\\111"))))
              , CharClass(Simple(Present(Numeric("\\114"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"do\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\100"))))
              , CharClass(Simple(Present(Numeric("\\111"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"done\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\100"))))
              , CharClass(Simple(Present(Numeric("\\111"))))
              , CharClass(Simple(Present(Numeric("\\110"))))
              , CharClass(Simple(Present(Numeric("\\101"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"new\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\110"))))
              , CharClass(Simple(Present(Numeric("\\101"))))
              , CharClass(Simple(Present(Numeric("\\119"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"object\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\111"))))
              , CharClass(Simple(Present(Numeric("\\98"))))
              , CharClass(Simple(Present(Numeric("\\106"))))
              , CharClass(Simple(Present(Numeric("\\101"))))
              , CharClass(Simple(Present(Numeric("\\99"))))
              , CharClass(Simple(Present(Numeric("\\116"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"end\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\101"))))
              , CharClass(Simple(Present(Numeric("\\110"))))
              , CharClass(Simple(Present(Numeric("\\100"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"module\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\109"))))
              , CharClass(Simple(Present(Numeric("\\111"))))
              , CharClass(Simple(Present(Numeric("\\100"))))
              , CharClass(Simple(Present(Numeric("\\117"))))
              , CharClass(Simple(Present(Numeric("\\108"))))
              , CharClass(Simple(Present(Numeric("\\101"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"open\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\111"))))
              , CharClass(Simple(Present(Numeric("\\112"))))
              , CharClass(Simple(Present(Numeric("\\101"))))
              , CharClass(Simple(Present(Numeric("\\110"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"open!\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\111"))))
              , CharClass(Simple(Present(Numeric("\\112"))))
              , CharClass(Simple(Present(Numeric("\\101"))))
              , CharClass(Simple(Present(Numeric("\\110"))))
              , CharClass(Simple(Present(Numeric("\\33"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"let\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\108"))))
              , CharClass(Simple(Present(Numeric("\\101"))))
              , CharClass(Simple(Present(Numeric("\\116"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"exception\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\101"))))
              , CharClass(Simple(Present(Numeric("\\120"))))
              , CharClass(Simple(Present(Numeric("\\99"))))
              , CharClass(Simple(Present(Numeric("\\101"))))
              , CharClass(Simple(Present(Numeric("\\112"))))
              , CharClass(Simple(Present(Numeric("\\116"))))
              , CharClass(Simple(Present(Numeric("\\105"))))
              , CharClass(Simple(Present(Numeric("\\111"))))
              , CharClass(Simple(Present(Numeric("\\110"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"in\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\105"))))
              , CharClass(Simple(Present(Numeric("\\110"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"|\"")
          , Rhs([CharClass(Simple(Present(Numeric("\\124"))))])
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"and\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\97"))))
              , CharClass(Simple(Present(Numeric("\\110"))))
              , CharClass(Simple(Present(Numeric("\\100"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\":>\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\58"))))
              , CharClass(Simple(Present(Numeric("\\62"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\".\"")
          , Rhs([CharClass(Simple(Present(Numeric("\\46"))))])
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"when\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\119"))))
              , CharClass(Simple(Present(Numeric("\\104"))))
              , CharClass(Simple(Present(Numeric("\\101"))))
              , CharClass(Simple(Present(Numeric("\\110"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"->\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\45"))))
              , CharClass(Simple(Present(Numeric("\\62"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"~\"")
          , Rhs([CharClass(Simple(Present(Numeric("\\126"))))])
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"?\"")
          , Rhs([CharClass(Simple(Present(Numeric("\\63"))))])
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\":\"")
          , Rhs([CharClass(Simple(Present(Numeric("\\58"))))])
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"=\"")
          , Rhs([CharClass(Simple(Present(Numeric("\\61"))))])
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"(\"")
          , Rhs([CharClass(Simple(Present(Numeric("\\40"))))])
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"type\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\116"))))
              , CharClass(Simple(Present(Numeric("\\121"))))
              , CharClass(Simple(Present(Numeric("\\112"))))
              , CharClass(Simple(Present(Numeric("\\101"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\")\"")
          , Rhs([CharClass(Simple(Present(Numeric("\\41"))))])
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"-\"")
          , Rhs([CharClass(Simple(Present(Numeric("\\45"))))])
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\";\"")
          , Rhs([CharClass(Simple(Present(Numeric("\\59"))))])
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"to\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\116"))))
              , CharClass(Simple(Present(Numeric("\\111"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lit("\"downto\"")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\100"))))
              , CharClass(Simple(Present(Numeric("\\111"))))
              , CharClass(Simple(Present(Numeric("\\119"))))
              , CharClass(Simple(Present(Numeric("\\110"))))
              , CharClass(Simple(Present(Numeric("\\116"))))
              , CharClass(Simple(Present(Numeric("\\111"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Iter(Sort("TypeConstr")))
          , Rhs([Cf(Sort("TypeConstr"))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Iter(Sort("TypeConstr")))
          , Rhs(
              [ Cf(Iter(Sort("TypeConstr")))
              , Cf(Opt(Layout()))
              , Cf(Sort("TypeConstr"))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(Cf(IterStar(Sort("TypeConstr"))), Rhs([]), NoAttrs())
        , SdfProduction(
            Cf(IterStar(Sort("TypeConstr")))
          , Rhs([Cf(Iter(Sort("TypeConstr")))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Iter(Sort("Parameter")))
          , Rhs([Cf(Sort("Parameter"))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Iter(Sort("Parameter")))
          , Rhs(
              [ Cf(Iter(Sort("Parameter")))
              , Cf(Opt(Layout()))
              , Cf(Sort("Parameter"))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(Cf(IterStar(Sort("Parameter"))), Rhs([]), NoAttrs())
        , SdfProduction(
            Cf(IterStar(Sort("Parameter")))
          , Rhs([Cf(Iter(Sort("Parameter")))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Iter(Sort("InnerPatternMatching")))
          , Rhs([Cf(Sort("InnerPatternMatching"))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Iter(Sort("InnerPatternMatching")))
          , Rhs(
              [ Cf(Iter(Sort("InnerPatternMatching")))
              , Cf(Opt(Layout()))
              , Cf(Sort("InnerPatternMatching"))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(Cf(IterStar(Sort("InnerPatternMatching"))), Rhs([]), NoAttrs())
        , SdfProduction(
            Cf(IterStar(Sort("InnerPatternMatching")))
          , Rhs([Cf(Iter(Sort("InnerPatternMatching")))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(IterSep(Sort("FieldAssign"), Lit("\";\"")))
          , Rhs([Cf(Sort("FieldAssign"))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(IterSep(Sort("FieldAssign"), Lit("\";\"")))
          , Rhs(
              [ Cf(IterSep(Sort("FieldAssign"), Lit("\";\"")))
              , Cf(Opt(Layout()))
              , Lit("\";\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("FieldAssign"))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Cf(IterStarSep(Sort("FieldAssign"), Lit("\";\"")))
          , Rhs([])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(IterStarSep(Sort("FieldAssign"), Lit("\";\"")))
          , Rhs([Cf(IterSep(Sort("FieldAssign"), Lit("\";\"")))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Iter(Sort("FieldAssign")))
          , Rhs([Cf(Sort("FieldAssign"))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Iter(Sort("FieldAssign")))
          , Rhs(
              [ Cf(Iter(Sort("FieldAssign")))
              , Cf(Opt(Layout()))
              , Cf(Sort("FieldAssign"))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(Cf(IterStar(Sort("FieldAssign"))), Rhs([]), NoAttrs())
        , SdfProduction(
            Cf(IterStar(Sort("FieldAssign")))
          , Rhs([Cf(Iter(Sort("FieldAssign")))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(IterSep(Sort("AssignInstVarName"), Lit("\";\"")))
          , Rhs([Cf(Sort("AssignInstVarName"))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(IterSep(Sort("AssignInstVarName"), Lit("\";\"")))
          , Rhs(
              [ Cf(IterSep(Sort("AssignInstVarName"), Lit("\";\"")))
              , Cf(Opt(Layout()))
              , Lit("\";\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("AssignInstVarName"))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Cf(IterStarSep(Sort("AssignInstVarName"), Lit("\";\"")))
          , Rhs([])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(IterStarSep(Sort("AssignInstVarName"), Lit("\";\"")))
          , Rhs([Cf(IterSep(Sort("AssignInstVarName"), Lit("\";\"")))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Iter(Sort("AndLetBindingSemiColon")))
          , Rhs([Cf(Sort("AndLetBindingSemiColon"))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Iter(Sort("AndLetBindingSemiColon")))
          , Rhs(
              [ Cf(Iter(Sort("AndLetBindingSemiColon")))
              , Cf(Opt(Layout()))
              , Cf(Sort("AndLetBindingSemiColon"))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(Cf(IterStar(Sort("AndLetBindingSemiColon"))), Rhs([]), NoAttrs())
        , SdfProduction(
            Cf(IterStar(Sort("AndLetBindingSemiColon")))
          , Rhs([Cf(Iter(Sort("AndLetBindingSemiColon")))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Opt(Sort("Attribute")))
          , Rhs([Cf(Sort("Attribute"))])
          , NoAttrs()
          )
        , SdfProduction(Cf(Opt(Sort("Attribute"))), Rhs([]), NoAttrs())
        , SdfProduction(
            Cf(Iter(Sort("Arg")))
          , Rhs([Cf(Sort("Arg"))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Iter(Sort("Arg")))
          , Rhs(
              [ Cf(Iter(Sort("Arg")))
              , Cf(Opt(Layout()))
              , Cf(Sort("Arg"))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(Cf(IterStar(Sort("Arg"))), Rhs([]), NoAttrs())
        , SdfProduction(
            Cf(IterStar(Sort("Arg")))
          , Rhs([Cf(Iter(Sort("Arg")))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Opt(Sort("SemiColon")))
          , Rhs([Cf(Sort("SemiColon"))])
          , NoAttrs()
          )
        , SdfProduction(Cf(Opt(Sort("SemiColon"))), Rhs([]), NoAttrs())
        , SdfProduction(
            Cf(Opt(Layout()))
          , Rhs([Cf(Layout())])
          , NoAttrs()
          )
        , SdfProduction(Cf(Opt(Layout())), Rhs([]), NoAttrs())
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("Prefix"))
          , Rhs(
              [Cf(Sort("PrefixSymbol")), Cf(Opt(Layout())), Cf(Sort("Expr"))]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("Field"))
          , Rhs(
              [ Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Lit("\".\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Ident"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("ValuePath1"))
          , Rhs(
              [ Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Lit("\".\"")
              , Cf(Opt(Layout()))
              , Lit("\"(\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("OperatorCharList"))
              , Cf(Opt(Layout()))
              , Lit("\")\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("ValuePath2"))
          , Rhs(
              [ Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Lit("\".\"")
              , Cf(Opt(Layout()))
              , Lit("\"(\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Operations"))
              , Cf(Opt(Layout()))
              , Lit("\")\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("DotBracket1"))
          , Rhs(
              [ Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Lit("\".\"")
              , Cf(Opt(Layout()))
              , Lit("\"(\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Cf(Opt(Sort("SemiColon")))
              , Cf(Opt(Layout()))
              , Lit("\")\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("DotBracket2"))
          , Rhs(
              [ Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Lit("\".\"")
              , Cf(Opt(Layout()))
              , Lit("\"[\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Cf(Opt(Sort("SemiColon")))
              , Cf(Opt(Layout()))
              , Lit("\"]\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("DotBracket3"))
          , Rhs(
              [ Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Lit("\".\"")
              , Cf(Opt(Layout()))
              , Lit("\"{\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Cf(Opt(Sort("SemiColon")))
              , Cf(Opt(Layout()))
              , Lit("\"}\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("HashMethod"))
          , Rhs(
              [ Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Lit("\"#\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("MethodName"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("HashInfix"))
          , Rhs(
              [ Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Cf(Sort("HashInfixSymbol"))
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              ]
            )
          , Attrs([Assoc(Left())])
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("FunctionApp"))
          , Rhs(
              [ Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Cf(Iter(Sort("Arg")))
              ]
            )
          , Attrs([LongestMatch(), Assoc(NonAssoc())])
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("Lazy"))
          , Rhs(
              [Lit("\"lazy\""), Cf(Opt(Layout())), Cf(Sort("Expr"))]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("Assert"))
          , Rhs(
              [Lit("\"assert\""), Cf(Opt(Layout())), Cf(Sort("Expr"))]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("UnaryMinus"))
          , Rhs(
              [Lit("\"-\""), Cf(Opt(Layout())), Cf(Sort("Expr"))]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("FUnaryMinus"))
          , Rhs(
              [Lit("\"-.\""), Cf(Opt(Layout())), Cf(Sort("Expr"))]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("Infix1"))
          , Rhs(
              [ Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Cf(Sort("InfixSymbol1"))
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              ]
            )
          , Attrs([Assoc(Right())])
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("Infix2"))
          , Rhs(
              [ Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Cf(Sort("InfixSymbol2"))
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              ]
            )
          , Attrs([Assoc(Left())])
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("Infix3"))
          , Rhs(
              [ Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Cf(Sort("InfixSymbol3"))
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              ]
            )
          , Attrs([Assoc(Left())])
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("ColonColon"))
          , Rhs(
              [ Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Lit("\"::\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              ]
            )
          , Attrs([Assoc(Right())])
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("Infix4"))
          , Rhs(
              [ Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Cf(Sort("InfixSymbol4"))
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              ]
            )
          , Attrs([Assoc(Right())])
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("Infix5"))
          , Rhs(
              [ Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Cf(Sort("InfixSymbol5"))
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              ]
            )
          , Attrs([Assoc(Left())])
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("Uneq"))
          , Rhs(
              [ Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Lit("\"!=\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              ]
            )
          , Attrs([Assoc(Left())])
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("Infix6"))
          , Rhs(
              [ Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Cf(Sort("InfixSymbol6"))
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              ]
            )
          , Attrs([Assoc(Right())])
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("Infix7"))
          , Rhs(
              [ Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Cf(Sort("InfixSymbol7"))
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              ]
            )
          , Attrs([Assoc(Right())])
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("Comma"))
          , Rhs(
              [ Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Lit("\",\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              ]
            )
          , Attrs([Assoc(Right())])
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("Assign"))
          , Rhs(
              [ Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Lit("\"<-\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              ]
            )
          , Attrs([Assoc(Right())])
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("Infix8"))
          , Rhs(
              [ Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Cf(Sort("InfixSymbol8"))
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              ]
            )
          , Attrs([Assoc(Right())])
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("IfThenElse"))
          , Rhs(
              [ Lit("\"if\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Lit("\"then\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Cf(Opt(Sort("SemiColon")))
              , Cf(Opt(Layout()))
              , Lit("\"else\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("IfThen"))
          , Rhs(
              [ Lit("\"if\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Lit("\"then\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("Sep"))
          , Rhs(
              [ Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Lit("\";\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              ]
            )
          , Attrs([Assoc(Right())])
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("Match"))
          , Rhs(
              [ Lit("\"match\"")
              , Cf(Opt(Layout()))
              , Cf(Opt(Sort("Attribute")))
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Cf(Opt(Sort("SemiColon")))
              , Cf(Opt(Layout()))
              , Lit("\"with\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("PatternMatching"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("Function"))
          , Rhs(
              [ Lit("\"function\"")
              , Cf(Opt(Layout()))
              , Cf(Opt(Sort("Attribute")))
              , Cf(Opt(Layout()))
              , Cf(Sort("PatternMatching"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("Fun"))
          , Rhs(
              [ Lit("\"fun\"")
              , Cf(Opt(Layout()))
              , Cf(Opt(Sort("Attribute")))
              , Cf(Opt(Layout()))
              , Cf(Sort("MultipleMatching"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("TryBlock"))
          , Rhs(
              [ Lit("\"try\"")
              , Cf(Opt(Layout()))
              , Cf(Opt(Sort("Attribute")))
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Cf(Opt(Sort("SemiColon")))
              , Cf(Opt(Layout()))
              , Lit("\"with\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("PatternMatching"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("Let"))
          , Rhs(
              [ Lit("\"let\"")
              , Cf(Opt(Layout()))
              , Cf(Opt(Sort("Attribute")))
              , Cf(Opt(Layout()))
              , Cf(Sort("LetBinding"))
              , Cf(Opt(Layout()))
              , Cf(Opt(Sort("SemiColon")))
              , Cf(Opt(Layout()))
              , Cf(IterStar(Sort("AndLetBindingSemiColon")))
              , Cf(Opt(Layout()))
              , Lit("\"in\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("LetRec"))
          , Rhs(
              [ Lit("\"let\"")
              , Cf(Opt(Layout()))
              , Lit("\"rec\"")
              , Cf(Opt(Layout()))
              , Cf(Opt(Sort("Attribute")))
              , Cf(Opt(Layout()))
              , Cf(Sort("LetBinding"))
              , Cf(Opt(Layout()))
              , Cf(Opt(Sort("SemiColon")))
              , Cf(Opt(Layout()))
              , Cf(IterStar(Sort("AndLetBindingSemiColon")))
              , Cf(Opt(Layout()))
              , Lit("\"in\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("LetModule"))
          , Rhs(
              [ Lit("\"let\"")
              , Cf(Opt(Layout()))
              , Lit("\"module\"")
              , Cf(Opt(Layout()))
              , Cf(Opt(Sort("Attribute")))
              , Cf(Opt(Layout()))
              , Cf(Sort("ModuleName"))
              , Cf(Opt(Layout()))
              , Lit("\"=\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("ModuleExpr"))
              , Cf(Opt(Layout()))
              , Lit("\"in\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Sort("Expr"))
          , Rhs(
              [ Lit("\"(\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Lit("\")\"")
              ]
            )
          , Attrs([Bracket()])
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("Bracket"))
          , Rhs(
              [ Lit("\"(\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Lit("\";\"")
              , Cf(Opt(Layout()))
              , Lit("\")\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Sort("Expr"))
          , Rhs(
              [ Lit("\"begin\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Lit("\"end\"")
              ]
            )
          , Attrs([Bracket()])
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("Bracket2"))
          , Rhs(
              [ Lit("\"begin\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Lit("\";\"")
              , Cf(Opt(Layout()))
              , Lit("\"end\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("Brackets1"))
          , Rhs(
              [ Lit("\"(\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Lit("\":\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("TypeExpr"))
              , Cf(Opt(Layout()))
              , Lit("\")\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("Brackets2"))
          , Rhs(
              [ Lit("\"(\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Lit("\":>\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("TypeExpr"))
              , Cf(Opt(Layout()))
              , Lit("\")\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("Brackets3"))
          , Rhs(
              [ Lit("\"(\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Lit("\":\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("TypeExpr"))
              , Cf(Opt(Layout()))
              , Lit("\":>\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("TypeExpr"))
              , Cf(Opt(Layout()))
              , Lit("\")\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("Brackets4"))
          , Rhs(
              [ Lit("\"{<\"")
              , Cf(Opt(Layout()))
              , Cf(IterSep(Sort("AssignInstVarName"), Lit("\";\"")))
              , Cf(Opt(Layout()))
              , Cf(Opt(Sort("SemiColon")))
              , Cf(Opt(Layout()))
              , Lit("\">}\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("AssignInstVarName")), Constructor("Assign"))
          , Rhs(
              [ Cf(Sort("InstVarName"))
              , Cf(Opt(Layout()))
              , Lit("\"=\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("Tuple"))
          , Rhs(
              [ Lit("\"[\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Cf(Opt(Sort("SemiColon")))
              , Cf(Opt(Layout()))
              , Lit("\"]\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("Array"))
          , Rhs(
              [ Lit("\"[|\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Cf(Opt(Sort("SemiColon")))
              , Cf(Opt(Layout()))
              , Lit("\"|]\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("Record1"))
          , Rhs(
              [ Lit("\"{\"")
              , Cf(Opt(Layout()))
              , Cf(Iter(Sort("FieldAssign")))
              , Cf(Opt(Layout()))
              , Cf(Opt(Sort("SemiColon")))
              , Cf(Opt(Layout()))
              , Lit("\"}\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("Record2"))
          , Rhs(
              [ Lit("\"{\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Lit("\"with\"")
              , Cf(Opt(Layout()))
              , Cf(IterSep(Sort("FieldAssign"), Lit("\";\"")))
              , Cf(Opt(Layout()))
              , Cf(Opt(Sort("SemiColon")))
              , Cf(Opt(Layout()))
              , Lit("\"}\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("While"))
          , Rhs(
              [ Lit("\"while\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Lit("\"do\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Cf(Opt(Sort("SemiColon")))
              , Cf(Opt(Layout()))
              , Lit("\"done\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("For"))
          , Rhs(
              [ Lit("\"for\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Ident"))
              , Cf(Opt(Layout()))
              , Lit("\"=\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Cf(Sort("ToDownTo"))
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Lit("\"do\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Cf(Opt(Sort("SemiColon")))
              , Cf(Opt(Layout()))
              , Lit("\"done\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("New"))
          , Rhs(
              [Lit("\"new\""), Cf(Opt(Layout())), Cf(Sort("ClassPath"))]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("Object"))
          , Rhs(
              [ Lit("\"object\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("ClassBody"))
              , Cf(Opt(Layout()))
              , Lit("\"end\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("ModuleExpr"))
          , Rhs(
              [ Lit("\"(\"")
              , Cf(Opt(Layout()))
              , Lit("\"module\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("ModuleExpr"))
              , Cf(Opt(Layout()))
              , Cf(Sort("ColonPackageTypeOpt"))
              , Cf(Opt(Layout()))
              , Lit("\")\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Sort("Expr"))
          , Rhs([Cf(Sort("ValueName"))])
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("Constant"))
          , Rhs([Cf(Sort("Constant"))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Sort("Expr"))
          , Rhs([Cf(Sort("ConstrName"))])
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("LetOpen"))
          , Rhs(
              [ Lit("\"let\"")
              , Cf(Opt(Layout()))
              , Lit("\"open\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("ModulePath"))
              , Cf(Opt(Layout()))
              , Lit("\"in\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("LetOpen2"))
          , Rhs(
              [ Lit("\"let\"")
              , Cf(Opt(Layout()))
              , Lit("\"open!\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("ModulePath"))
              , Cf(Opt(Layout()))
              , Lit("\"in\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("LetException"))
          , Rhs(
              [ Lit("\"let\"")
              , Cf(Opt(Layout()))
              , Lit("\"exception\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("ConstrDecl"))
              , Cf(Opt(Layout()))
              , Lit("\"in\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("FieldAssign")), Constructor("FieldAssign"))
          , Rhs(
              [ Cf(Sort("Field"))
              , Cf(Opt(Layout()))
              , Lit("\"=\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("FieldAssign")), Constructor("Field"))
          , Rhs([Cf(Sort("Field"))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Sort("Arg"))
          , Rhs([Cf(Sort("Expr"))])
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Arg")), Constructor("Label"))
          , Rhs([Cf(Sort("Label"))])
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Arg")), Constructor("LabelColon"))
          , Rhs(
              [Cf(Sort("LabelColon")), Cf(Opt(Layout())), Cf(Sort("Expr"))]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Arg")), Constructor("OptLabel"))
          , Rhs([Cf(Sort("OptLabel"))])
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Arg")), Constructor("OptLabelColon"))
          , Rhs(
              [Cf(Sort("OptLabelColon")), Cf(Opt(Layout())), Cf(Sort("Expr"))]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("PatternMatching")), Constructor("PatternMatching"))
          , Rhs(
              [ Cf(Sort("OptBar"))
              , Cf(Opt(Layout()))
              , Cf(Sort("Pattern"))
              , Cf(Opt(Layout()))
              , Lit("\"->\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Cf(IterStar(Sort("InnerPatternMatching")))
              ]
            )
          , Attrs([LongestMatch()])
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("PatternMatching")), Constructor("PatternMatchingWhen"))
          , Rhs(
              [ Cf(Sort("OptBar"))
              , Cf(Opt(Layout()))
              , Cf(Sort("Pattern"))
              , Cf(Opt(Layout()))
              , Lit("\"when\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Lit("\"->\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Cf(IterStar(Sort("InnerPatternMatching")))
              ]
            )
          , Attrs([LongestMatch()])
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("InnerPatternMatching")), Constructor("InnerPatternMatching"))
          , Rhs(
              [ Cf(Opt(Sort("SemiColon")))
              , Cf(Opt(Layout()))
              , Lit("\"|\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Pattern"))
              , Cf(Opt(Layout()))
              , Lit("\"->\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("InnerPatternMatching")), Constructor("InnerPatternMatchingWhen"))
          , Rhs(
              [ Cf(Opt(Sort("SemiColon")))
              , Cf(Opt(Layout()))
              , Lit("\"|\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Pattern"))
              , Cf(Opt(Layout()))
              , Lit("\"when\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Lit("\"->\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("AndLetBindingSemiColon")), Constructor("LetBinding"))
          , Rhs(
              [ Lit("\"and\"")
              , Cf(Opt(Layout()))
              , Cf(Opt(Sort("Attribute")))
              , Cf(Opt(Layout()))
              , Cf(Sort("LetBinding"))
              , Cf(Opt(Layout()))
              , Cf(Opt(Sort("SemiColon")))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("LetBinding")), Constructor("LetBinding"))
          , Rhs(
              [ Cf(Sort("Pattern"))
              , Cf(Opt(Layout()))
              , Lit("\"=\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("LetBinding")), Constructor("LetBinding1"))
          , Rhs(
              [ Cf(Sort("ValueName"))
              , Cf(Opt(Layout()))
              , Cf(IterStar(Sort("Parameter")))
              , Cf(Opt(Layout()))
              , Lit("\"=\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("LetBinding")), Constructor("LetBinding1"))
          , Rhs(
              [ Cf(Sort("ValueName"))
              , Cf(Opt(Layout()))
              , Cf(IterStar(Sort("Parameter")))
              , Cf(Opt(Layout()))
              , Lit("\":\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("PolyTypeExpr"))
              , Cf(Opt(Layout()))
              , Lit("\":>\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("TypeExpr"))
              , Cf(Opt(Layout()))
              , Lit("\"=\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("LetBinding")), Constructor("LetBinding2"))
          , Rhs(
              [ Cf(Sort("ValueName"))
              , Cf(Opt(Layout()))
              , Cf(IterStar(Sort("Parameter")))
              , Cf(Opt(Layout()))
              , Lit("\":\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("PolyTypeExpr"))
              , Cf(Opt(Layout()))
              , Lit("\"=\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("LetBinding")), Constructor("LetBinding3"))
          , Rhs(
              [ Cf(Sort("ValueName"))
              , Cf(Opt(Layout()))
              , Cf(IterStar(Sort("Parameter")))
              , Cf(Opt(Layout()))
              , Lit("\":>\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("TypeExpr"))
              , Cf(Opt(Layout()))
              , Lit("\"=\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("LetBinding")), Constructor("BindingNew"))
          , Rhs(
              [ Cf(Sort("ValueName"))
              , Cf(Opt(Layout()))
              , Lit("\":\"")
              , Cf(Opt(Layout()))
              , Lit("\"type\"")
              , Cf(Opt(Layout()))
              , Cf(IterStar(Sort("TypeConstr")))
              , Cf(Opt(Layout()))
              , Lit("\".\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("TypeExpr"))
              , Cf(Opt(Layout()))
              , Lit("\"=\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("MultipleMatching")), Constructor("MultipleMatching"))
          , Rhs(
              [ Cf(Iter(Sort("Parameter")))
              , Cf(Opt(Layout()))
              , Lit("\"->\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("MultipleMatching")), Constructor("MultipleMatching"))
          , Rhs(
              [ Cf(Iter(Sort("Parameter")))
              , Cf(Opt(Layout()))
              , Lit("\"when\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Lit("\"->\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Parameter")), Constructor("PatternParam"))
          , Rhs([Cf(Sort("Pattern"))])
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Parameter")), Constructor("Param1"))
          , Rhs([Cf(Sort("Label"))])
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Parameter")), Constructor("Param2"))
          , Rhs(
              [ Lit("\"~\"")
              , Cf(Opt(Layout()))
              , Lit("\"(\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("LabelName"))
              , Cf(Opt(Layout()))
              , Lit("\")\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Parameter")), Constructor("Param2"))
          , Rhs(
              [ Lit("\"~\"")
              , Cf(Opt(Layout()))
              , Lit("\"(\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("LabelName"))
              , Cf(Opt(Layout()))
              , Lit("\":\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("TypeExpr"))
              , Cf(Opt(Layout()))
              , Lit("\")\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Parameter")), Constructor("Param3"))
          , Rhs(
              [Cf(Sort("LabelColon")), Cf(Opt(Layout())), Cf(Sort("Pattern"))]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Parameter")), Constructor("Param4"))
          , Rhs([Cf(Sort("OptLabel"))])
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Parameter")), Constructor("Param5"))
          , Rhs(
              [ Lit("\"?\"")
              , Cf(Opt(Layout()))
              , Lit("\"(\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("LabelName"))
              , Cf(Opt(Layout()))
              , Cf(Sort("ColonTypeExprOpt"))
              , Cf(Opt(Layout()))
              , Lit("\")\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Parameter")), Constructor("Param5"))
          , Rhs(
              [ Lit("\"?\"")
              , Cf(Opt(Layout()))
              , Lit("\"(\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("LabelName"))
              , Cf(Opt(Layout()))
              , Cf(Sort("ColonTypeExprOpt"))
              , Cf(Opt(Layout()))
              , Lit("\"=\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Lit("\")\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Parameter")), Constructor("Param6"))
          , Rhs(
              [Cf(Sort("OptLabelColon")), Cf(Opt(Layout())), Cf(Sort("Pattern"))]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Parameter")), Constructor("Param7"))
          , Rhs(
              [ Cf(Sort("OptLabelColon"))
              , Cf(Opt(Layout()))
              , Lit("\"(\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Pattern"))
              , Cf(Opt(Layout()))
              , Lit("\":\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("TypeExpr"))
              , Cf(Opt(Layout()))
              , Lit("\"=\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("Expr"))
              , Cf(Opt(Layout()))
              , Lit("\")\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Parameter")), Constructor("TypeParam"))
          , Rhs(
              [ Lit("\"(\"")
              , Cf(Opt(Layout()))
              , Lit("\"type\"")
              , Cf(Opt(Layout()))
              , Cf(Sort("TypeConstrName"))
              , Cf(Opt(Layout()))
              , Lit("\")\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Cf(Sort("Expr")), Constructor("ExprAttr"))
          , Rhs(
              [Cf(Sort("Expr")), Cf(Opt(Layout())), Cf(Sort("Attribute"))]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lex(Sort("UnMinus"))
          , Rhs([Lit("\"-\"")])
          , NoAttrs()
          )
        , SdfProduction(
            Lex(Sort("SemiColon"))
          , Rhs([Lit("\";\"")])
          , NoAttrs()
          )
        , SdfProduction(
            Lex(Sort("SemiColon2"))
          , Rhs([Lit("\";\"")])
          , NoAttrs()
          )
        , SdfProduction(
            Lex(Sort("ToDownTo"))
          , Rhs([Lit("\"to\"")])
          , NoAttrs()
          )
        , SdfProduction(
            Lex(Sort("ToDownTo"))
          , Rhs([Lit("\"downto\"")])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Sort("ToDownTo"))
          , Rhs([Lex(Sort("ToDownTo"))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Sort("SemiColon2"))
          , Rhs([Lex(Sort("SemiColon2"))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Sort("SemiColon"))
          , Rhs([Lex(Sort("SemiColon"))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Sort("UnMinus"))
          , Rhs([Lex(Sort("UnMinus"))])
          , NoAttrs()
          )
        , SdfProduction(
            Cf(Layout())
          , Rhs([Cf(Layout()), Cf(Layout())])
          , Attrs([Assoc(Left())])
          )
        , SdfProduction(
            FileStart()
          , Rhs([Start(), CharClass(Simple(Present(Numeric("\\256"))))])
          , NoAttrs()
          )
        ]
      )
    )
  , SDFSection(
      Restrictions(
        [ Follow(
            [Lex(Sort("UnMinus"))]
          , List(
              [CharClass(Simple(Present(Range(Numeric("\\48"), Numeric("\\57")))))]
            )
          )
        , Follow(
            [Lex(Sort("SemiColon2"))]
          , List([CharClass(Simple(Present(Numeric("\\59"))))])
          )
        , Follow(
            [Lit("\"$PrefixSymbol\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$OperatorCharList\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$Operations\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$MethodName\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$HashInfixSymbol\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$InfixSymbol1\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$InfixSymbol2\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$InfixSymbol3\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$InfixSymbol4\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$InfixSymbol5\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$InfixSymbol6\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$InfixSymbol7\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$InfixSymbol8\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$ModuleName\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$AssignInstVarName\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$InstVarName\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$Ident\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$ToDownTo\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$ClassPath\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$ClassBody\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$ModuleExpr\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$ColonPackageTypeOpt\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$Constant\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$ConstrName\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$ModulePath\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$ConstrDecl\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$FieldAssign\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$Field\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$Arg\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$PatternMatching\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$OptBar\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$InnerPatternMatching\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$AndLetBindingSemiColon\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$SemiColon\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$PolyTypeExpr\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$LetBinding\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$ValueName\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$TypeConstr\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$MultipleMatching\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$Label\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$LabelColon\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$OptLabel\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$LabelName\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$ColonTypeExprOpt\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$OptLabelColon\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$Pattern\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$TypeExpr\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$Parameter\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$TypeConstrName\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$Expr\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        , Follow(
            [Lit("\"$Attribute\"")]
          , List(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Range(Numeric("\\97"), Numeric("\\122"))
                      )
                    )
                  )
                )
              ]
            )
          )
        ]
      )
    )
  , SDFSection(
      Priorities(
        [ Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Prefix")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Field")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Prefix")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("ValuePath1")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Prefix")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("ValuePath2")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Prefix")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("DotBracket1")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Prefix")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("DotBracket2")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Prefix")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("DotBracket3")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Field")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("HashMethod")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("ValuePath1")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("HashMethod")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("ValuePath2")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("HashMethod")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("DotBracket1")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("HashMethod")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("DotBracket2")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("HashMethod")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("DotBracket3")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("HashMethod")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("HashMethod")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("HashInfix")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("HashInfix")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("FunctionApp")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("HashInfix")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Lazy")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("HashInfix")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Assert")))
            ]
          )
        , Assoc(
            SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("FunctionApp")))
          , NonAssoc()
          , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Lazy")))
          )
        , Assoc(
            SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Lazy")))
          , NonAssoc()
          , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("FunctionApp")))
          )
        , Assoc(
            SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("FunctionApp")))
          , NonAssoc()
          , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Assert")))
          )
        , Assoc(
            SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Assert")))
          , NonAssoc()
          , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("FunctionApp")))
          )
        , Assoc(
            SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Lazy")))
          , NonAssoc()
          , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Assert")))
          )
        , Assoc(
            SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Assert")))
          , NonAssoc()
          , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Lazy")))
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("FunctionApp")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("UnaryMinus")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("FunctionApp")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("FUnaryMinus")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Lazy")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("UnaryMinus")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Lazy")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("FUnaryMinus")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Assert")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("UnaryMinus")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Assert")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("FUnaryMinus")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("UnaryMinus")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix1")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("FUnaryMinus")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix1")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix1")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix2")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix2")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix3")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix3")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("ColonColon")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("ColonColon")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix4")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix4")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix5")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix5")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Uneq")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Uneq")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix6")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix6")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix7")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix7")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Comma")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Comma")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Assign")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Assign")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix8")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix8")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("IfThenElse")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("IfThenElse")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("IfThen")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("IfThen")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("ExprAttr")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("ExprAttr")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Sep")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Sep")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Match")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Sep")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Function")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Sep")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("TryBlock")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Sep")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Fun")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Sep")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Let")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Sep")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("LetRec")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Sep")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("LetOpen")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Sep")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("LetOpen2")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Sep")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("LetException")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Sep")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("LetModule")))
            ]
          )
        , Chain(
            [ SimpleRefGroup(SortConsRef(Cf(Sort("FieldAssign")), Constructor("FieldAssign")))
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Sep")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Constant")))
                , Default(["0"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Constant")), Constructor("Constr")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Parameter")), Constructor("PatternParam")))
                , Default(["0"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Pattern")), Constructor("ConstrPattern")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("AssignInstVarName")), Constructor("Assign")))
                , Default(["2"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Sep")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("LetBinding")), Constructor("LetBinding")))
                , Default(["0"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Pattern")), Constructor("PatternValueName")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("IfThenElse")))
                , Default(["3"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Sep")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleGroup(
                    SdfProduction(
                      Cf(Sort("Arg"))
                    , Rhs([Cf(Sort("Expr"))])
                    , NoAttrs()
                    )
                  )
                , Default(["0"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("FunctionApp")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleGroup(
                    SdfProduction(
                      Cf(Sort("Arg"))
                    , Rhs([Cf(Sort("Expr"))])
                    , NoAttrs()
                    )
                  )
                , Default(["0"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("ExprAttr")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleGroup(
                    SdfProduction(
                      Cf(Sort("Arg"))
                    , Rhs([Cf(Sort("Expr"))])
                    , NoAttrs()
                    )
                  )
                , Default(["0"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Lazy")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleGroup(
                    SdfProduction(
                      Cf(Sort("Arg"))
                    , Rhs([Cf(Sort("Expr"))])
                    , NoAttrs()
                    )
                  )
                , Default(["0"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Assert")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleGroup(
                    SdfProduction(
                      Cf(Sort("Arg"))
                    , Rhs([Cf(Sort("Expr"))])
                    , NoAttrs()
                    )
                  )
                , Default(["0"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("UnaryMinus")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleGroup(
                    SdfProduction(
                      Cf(Sort("Arg"))
                    , Rhs([Cf(Sort("Expr"))])
                    , NoAttrs()
                    )
                  )
                , Default(["0"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("FUnaryMinus")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleGroup(
                    SdfProduction(
                      Cf(Sort("Arg"))
                    , Rhs([Cf(Sort("Expr"))])
                    , NoAttrs()
                    )
                  )
                , Default(["0"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix1")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleGroup(
                    SdfProduction(
                      Cf(Sort("Arg"))
                    , Rhs([Cf(Sort("Expr"))])
                    , NoAttrs()
                    )
                  )
                , Default(["0"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix2")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleGroup(
                    SdfProduction(
                      Cf(Sort("Arg"))
                    , Rhs([Cf(Sort("Expr"))])
                    , NoAttrs()
                    )
                  )
                , Default(["0"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix3")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleGroup(
                    SdfProduction(
                      Cf(Sort("Arg"))
                    , Rhs([Cf(Sort("Expr"))])
                    , NoAttrs()
                    )
                  )
                , Default(["0"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix4")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleGroup(
                    SdfProduction(
                      Cf(Sort("Arg"))
                    , Rhs([Cf(Sort("Expr"))])
                    , NoAttrs()
                    )
                  )
                , Default(["0"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix5")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleGroup(
                    SdfProduction(
                      Cf(Sort("Arg"))
                    , Rhs([Cf(Sort("Expr"))])
                    , NoAttrs()
                    )
                  )
                , Default(["0"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix6")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleGroup(
                    SdfProduction(
                      Cf(Sort("Arg"))
                    , Rhs([Cf(Sort("Expr"))])
                    , NoAttrs()
                    )
                  )
                , Default(["0"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix7")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleGroup(
                    SdfProduction(
                      Cf(Sort("Arg"))
                    , Rhs([Cf(Sort("Expr"))])
                    , NoAttrs()
                    )
                  )
                , Default(["0"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix8")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleGroup(
                    SdfProduction(
                      Cf(Sort("Arg"))
                    , Rhs([Cf(Sort("Expr"))])
                    , NoAttrs()
                    )
                  )
                , Default(["0"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Uneq")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleGroup(
                    SdfProduction(
                      Cf(Sort("Arg"))
                    , Rhs([Cf(Sort("Expr"))])
                    , NoAttrs()
                    )
                  )
                , Default(["0"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("IfThenElse")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleGroup(
                    SdfProduction(
                      Cf(Sort("Arg"))
                    , Rhs([Cf(Sort("Expr"))])
                    , NoAttrs()
                    )
                  )
                , Default(["0"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("IfThen")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleGroup(
                    SdfProduction(
                      Cf(Sort("Arg"))
                    , Rhs([Cf(Sort("Expr"))])
                    , NoAttrs()
                    )
                  )
                , Default(["0"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Sep")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleGroup(
                    SdfProduction(
                      Cf(Sort("Arg"))
                    , Rhs([Cf(Sort("Expr"))])
                    , NoAttrs()
                    )
                  )
                , Default(["0"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("ColonColon")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleGroup(
                    SdfProduction(
                      Cf(Sort("Arg"))
                    , Rhs([Cf(Sort("Expr"))])
                    , NoAttrs()
                    )
                  )
                , Default(["0"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Comma")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleGroup(
                    SdfProduction(
                      Cf(Sort("Arg"))
                    , Rhs([Cf(Sort("Expr"))])
                    , NoAttrs()
                    )
                  )
                , Default(["0"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Match")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleGroup(
                    SdfProduction(
                      Cf(Sort("Arg"))
                    , Rhs([Cf(Sort("Expr"))])
                    , NoAttrs()
                    )
                  )
                , Default(["0"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Function")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleGroup(
                    SdfProduction(
                      Cf(Sort("Arg"))
                    , Rhs([Cf(Sort("Expr"))])
                    , NoAttrs()
                    )
                  )
                , Default(["0"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("TryBlock")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleGroup(
                    SdfProduction(
                      Cf(Sort("Arg"))
                    , Rhs([Cf(Sort("Expr"))])
                    , NoAttrs()
                    )
                  )
                , Default(["0"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Fun")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleGroup(
                    SdfProduction(
                      Cf(Sort("Arg"))
                    , Rhs([Cf(Sort("Expr"))])
                    , NoAttrs()
                    )
                  )
                , Default(["0"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Let")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleGroup(
                    SdfProduction(
                      Cf(Sort("Arg"))
                    , Rhs([Cf(Sort("Expr"))])
                    , NoAttrs()
                    )
                  )
                , Default(["0"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("LetRec")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleGroup(
                    SdfProduction(
                      Cf(Sort("Arg"))
                    , Rhs([Cf(Sort("Expr"))])
                    , NoAttrs()
                    )
                  )
                , Default(["0"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("LetOpen")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleGroup(
                    SdfProduction(
                      Cf(Sort("Arg"))
                    , Rhs([Cf(Sort("Expr"))])
                    , NoAttrs()
                    )
                  )
                , Default(["0"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("LetOpen2")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleGroup(
                    SdfProduction(
                      Cf(Sort("Arg"))
                    , Rhs([Cf(Sort("Expr"))])
                    , NoAttrs()
                    )
                  )
                , Default(["0"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("LetException")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleGroup(
                    SdfProduction(
                      Cf(Sort("Arg"))
                    , Rhs([Cf(Sort("Expr"))])
                    , NoAttrs()
                    )
                  )
                , Default(["0"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("LetModule")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("LabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("FunctionApp")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("LabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("ExprAttr")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("LabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Lazy")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("LabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Assert")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("LabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("UnaryMinus")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("LabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("FUnaryMinus")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("LabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix1")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("LabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix2")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("LabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix3")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("LabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix4")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("LabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix5")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("LabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix6")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("LabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix7")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("LabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix8")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("LabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Uneq")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("LabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("IfThenElse")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("LabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("IfThen")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("LabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Sep")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("LabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("ColonColon")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("LabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Comma")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("LabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Match")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("LabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Function")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("LabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("TryBlock")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("LabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Fun")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("LabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Let")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("LabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("LetRec")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("LabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("LetOpen")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("LabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("LetOpen2")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("LabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("LetException")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("LabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("LetModule")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("OptLabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("FunctionApp")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("OptLabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("ExprAttr")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("OptLabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Lazy")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("OptLabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Assert")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("OptLabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("UnaryMinus")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("OptLabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("FUnaryMinus")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("OptLabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix1")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("OptLabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix2")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("OptLabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix3")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("OptLabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix4")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("OptLabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix5")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("OptLabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix7")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("OptLabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix8")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("OptLabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Uneq")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("OptLabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("IfThenElse")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("OptLabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("IfThen")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("OptLabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Sep")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("OptLabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("ColonColon")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("OptLabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Comma")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("OptLabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix6")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("OptLabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Match")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("OptLabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Function")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("OptLabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("TryBlock")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("OptLabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Fun")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("OptLabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Let")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("OptLabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("LetRec")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("OptLabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("LetOpen")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("OptLabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("LetOpen2")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("OptLabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("LetException")))
            ]
          )
        , Chain(
            [ NonTransitive(
                WithArguments(
                  SimpleRefGroup(SortConsRef(Cf(Sort("Arg")), Constructor("OptLabelColon")))
                , Default(["1"])
                )
              )
            , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("LetModule")))
            ]
          )
        , Assoc(
            SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("HashInfix")))
          , Left()
          , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("HashInfix")))
          )
        , Assoc(
            SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("FunctionApp")))
          , NonAssoc()
          , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("FunctionApp")))
          )
        , Assoc(
            SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix1")))
          , Right()
          , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix1")))
          )
        , Assoc(
            SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix2")))
          , Left()
          , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix2")))
          )
        , Assoc(
            SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix3")))
          , Left()
          , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix3")))
          )
        , Assoc(
            SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("ColonColon")))
          , Right()
          , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("ColonColon")))
          )
        , Assoc(
            SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix4")))
          , Right()
          , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix4")))
          )
        , Assoc(
            SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix5")))
          , Left()
          , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix5")))
          )
        , Assoc(
            SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Uneq")))
          , Left()
          , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Uneq")))
          )
        , Assoc(
            SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix6")))
          , Right()
          , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix6")))
          )
        , Assoc(
            SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix7")))
          , Right()
          , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix7")))
          )
        , Assoc(
            SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Comma")))
          , Right()
          , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Comma")))
          )
        , Assoc(
            SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Assign")))
          , Right()
          , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Assign")))
          )
        , Assoc(
            SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix8")))
          , Right()
          , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Infix8")))
          )
        , Assoc(
            SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Sep")))
          , Right()
          , SimpleRefGroup(SortConsRef(Cf(Sort("Expr")), Constructor("Sep")))
          )
        , Assoc(
            SimpleGroup(
              SdfProduction(
                Cf(Layout())
              , Rhs([Cf(Layout()), Cf(Layout())])
              , NoAttrs()
              )
            )
          , Left()
          , SimpleGroup(
              SdfProduction(
                Cf(Layout())
              , Rhs([Cf(Layout()), Cf(Layout())])
              , NoAttrs()
              )
            )
          )
        ]
      )
    )
  ]
)