Module(
  Unparameterized("normalized/JasminXT-Descriptors-norm")
, [Imports([Module(Unparameterized("normalized/JasminXT-Types-norm"))])]
, [ SDFSection(
      ContextFreeStartSymbols([Sort("FieldDescriptor"), Sort("ReturnDescriptor"), Sort("BaseType")])
    )
  , SDFSection(
      ContextFreeSyntax(
        [ SdfProductionWithCons(
            SortCons(Sort("FieldDescriptor"), Constructor("JBCFieldDesc"))
          , Rhs([Sort("FieldType")])
          , NoAttrs()
          )
        , SdfProduction(Sort("ParameterDescriptor"), Rhs([Sort("FieldType")]), NoAttrs())
        , SdfProduction(Sort("AnnotationDescriptor"), Rhs([Sort("FieldType")]), NoAttrs())
        , SdfProduction(Sort("ReturnDescriptor"), Rhs([Sort("FieldType")]), NoAttrs())
        , SdfProductionWithCons(
            SortCons(Sort("ReturnDescriptor"), Constructor("Void"))
          , Rhs([Lit("\"V\"")])
          , NoAttrs()
          )
        ]
      )
    )
  , SDFSection(
      Kernel(
        [ SdfProductionWithCons(
            SortCons(Cf(Sort("MethodDescriptor")), Constructor("JBCMethodDesc"))
          , Rhs(
              [ Lit("\"(\"")
              , IterStar(Cf(Sort("ParameterDescriptor")))
              , Lit("\")\"")
              , Cf(Sort("ReturnDescriptor"))
              ]
            )
          , NoAttrs()
          )
        ]
      )
    )
  , SDFSection(
      LexicalRestrictions(
        [ Follow(
            [ Lit("\"$FieldDescriptor\"")
            , Lit("\"$ParameterDescriptor\"")
            , Lit("\"$AnnotationDescriptor\"")
            , Lit("\"$FieldType\"")
            , Lit("\"$ReturnDescriptor\"")
            ]
          , Single(
              CharClass(
                Simple(
                  Present(
                    Conc(
                      Range(Numeric("\\65"), Numeric("\\90"))
                    , Range(Numeric("\\97"), Numeric("\\122"))
                    )
                  )
                )
              )
            )
          )
        ]
      )
    )
  , SDFSection(LexicalSyntax([]))
  ]
)