Module(
  Unparameterized("normalized/expressions/ArrayCreation-norm")
, [ Imports(
      [ Module(Unparameterized("normalized/types/ReferenceTypes-norm"))
      , Module(Unparameterized("normalized/types/PrimitiveTypes-norm"))
      , Module(Unparameterized("normalized/interfaces/Annotations-norm"))
      , Module(Unparameterized("normalized/arrays/ArrayInitializers-norm"))
      ]
    )
  ]
, [ SDFSection(
      ContextFreeSyntax(
        [ SdfProduction(Sort("Expression"), Rhs([Sort("ArrayCreationExpression")]), NoAttrs())
        , SdfProductionWithCons(
            SortCons(Sort("ArrayCreationExpression"), Constructor("NewArray"))
          , Rhs(
              [Lit("\"new\""), Sort("ArrayBaseType"), Iter(Sort("DimExpr")), Sort("AnnotatedDimsEmpty")]
            )
          , NoAttrs()
          )
        , SdfProductionWithCons(
            SortCons(Sort("ArrayCreationExpression"), Constructor("NewArrayInit"))
          , Rhs(
              [Lit("\"new\""), Sort("ArrayBaseType"), Sort("AnnotatedDims"), Sort("ArrayInitializer")]
            )
          , NoAttrs()
          )
        , SdfProduction(Sort("ArrayBaseType"), Rhs([Sort("ClassType")]), NoAttrs())
        , SdfProduction(Sort("ArrayBaseType"), Rhs([Sort("PrimitiveType")]), NoAttrs())
        , SdfProductionWithCons(
            SortCons(Sort("DimExpr"), Constructor("Dim"))
          , Rhs(
              [IterStar(Sort("Annotation")), Lit("\"[\""), Sort("Expression"), Lit("\"]\"")]
            )
          , NoAttrs()
          )
        ]
      )
    )
  , SDFSection(
      LexicalRestrictions(
        [ Follow(
            [ Lit("\"$AnnotatedDimsEmpty\"")
            , Lit("\"$ArrayCreationExpression\"")
            , Lit("\"$AnnotatedDims\"")
            , Lit("\"$ArrayInitializer\"")
            , Lit("\"$ClassType\"")
            , Lit("\"$ArrayBaseType\"")
            , Lit("\"$PrimitiveType\"")
            , Lit("\"$DimExpr\"")
            , Lit("\"$Annotation\"")
            , Lit("\"$Expression\"")
            ]
          , Single(
              CharClass(
                Simple(
                  Present(
                    Conc(
                      Range(Numeric("\\65"), Numeric("\\90"))
                    , Range(Numeric("\\97"), Numeric("\\122"))
                    )
                  )
                )
              )
            )
          )
        ]
      )
    )
  , SDFSection(LexicalSyntax([]))
  ]
)