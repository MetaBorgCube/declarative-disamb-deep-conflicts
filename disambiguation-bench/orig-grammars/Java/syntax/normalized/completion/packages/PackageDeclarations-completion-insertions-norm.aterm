Module(
  Unparameterized("normalized/completion/packages/PackageDeclarations-completion-insertions-norm")
, [ Imports(
      [Module(Unparameterized("normalized/packages/PackageDeclarations-norm")), Module(Unparameterized("normalized/completion/lexical/Identifiers-completion-insertions-norm")), Module(Unparameterized("normalized/completion/interfaces/Annotations-completion-insertions-norm"))]
    )
  ]
, [ SDFSection(
      ContextFreeStartSymbols([Sort("PackageDeclaration"), Sort("Annotation"), Sort("Id")])
    )
  , SDFSection(
      ContextFreeSyntax(
        [ SdfProductionWithCons(
            SortCons(Sort("PackageDeclaration"), Constructor("PackageDeclaration-Plhdr"))
          , Rhs([Sort("COMPLETION-INSERTION")])
          , Attrs([PlaceholderInsertion()])
          )
        , SdfProductionWithCons(
            SortCons(Sort("Annotation"), Constructor("Annotation-Plhdr"))
          , Rhs([Sort("COMPLETION-INSERTION")])
          , Attrs([PlaceholderInsertion()])
          )
        , SdfProductionWithCons(
            SortCons(Sort("Id"), Constructor("Id-Plhdr"))
          , Rhs([Sort("COMPLETION-INSERTION")])
          , Attrs([PlaceholderInsertion()])
          )
        ]
      )
    )
  , SDFSection(
      LexicalSyntax(
        [ SdfProduction(
            Lit("\"package\"")
          , Rhs([Sort("COMPLETION-INSERTION")])
          , Attrs([LiteralCompletion()])
          )
        , SdfProduction(
            Lit("\".\"")
          , Rhs([Sort("COMPLETION-INSERTION")])
          , Attrs([LiteralCompletion()])
          )
        , SdfProduction(
            Lit("\";\"")
          , Rhs([Sort("COMPLETION-INSERTION")])
          , Attrs([LiteralCompletion()])
          )
        ]
      )
    )
  , SDFSection(
      LexicalSyntax([SdfProduction(Sort("COMPLETION-INSERTION"), Rhs([]), NoAttrs())])
    )
  , SDFSection(
      LexicalRestrictions(
        [ Follow(
            [Lit("\"$PackageDeclaration\""), Lit("\"$Annotation\""), Lit("\"$Id\""), Lit("\"$COMPLETION-INSERTION\"")]
          , Single(
              CharClass(
                Simple(
                  Present(
                    Conc(
                      Range(Numeric("\\65"), Numeric("\\90"))
                    , Range(Numeric("\\97"), Numeric("\\122"))
                    )
                  )
                )
              )
            )
          )
        ]
      )
    )
  , SDFSection(LexicalSyntax([]))
  ]
)