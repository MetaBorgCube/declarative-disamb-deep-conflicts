Module(
  Unparameterized("normalized/Lexical-norm")
, []
, [ SDFSection(Sorts([DeclSort("TopLevel")]))
  , SDFSection(
      LexicalSyntax(
        [ SdfProduction(Sort("Ident"), Rhs([Sort("LowerCaseIdent")]), NoAttrs())
        , SdfProduction(Sort("Ident"), Rhs([Sort("CapitalizedIdent")]), NoAttrs())
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(Numeric("\\95"), Range(Numeric("\\97"), Numeric("\\122")))
                    )
                  )
                )
              , IterStar(
                  CharClass(
                    Simple(
                      Present(
                        Conc(
                          Numeric("\\39")
                        , Conc(
                            Range(Numeric("\\48"), Numeric("\\57"))
                          , Conc(
                              Range(Numeric("\\65"), Numeric("\\90"))
                            , Conc(Numeric("\\95"), Range(Numeric("\\97"), Numeric("\\122")))
                            )
                          )
                        )
                      )
                    )
                  )
                )
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs(
              [ CharClass(Simple(Present(Range(Numeric("\\65"), Numeric("\\90")))))
              , IterStar(
                  CharClass(
                    Simple(
                      Present(
                        Conc(
                          Numeric("\\39")
                        , Conc(
                            Range(Numeric("\\48"), Numeric("\\57"))
                          , Conc(
                              Range(Numeric("\\65"), Numeric("\\90"))
                            , Conc(Numeric("\\95"), Range(Numeric("\\97"), Numeric("\\122")))
                            )
                          )
                        )
                      )
                    )
                  )
                )
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("IntegerLiteral")
          , Rhs(
              [ Opt(Lit("\"-\""))
              , CharClass(Simple(Present(Range(Numeric("\\48"), Numeric("\\57")))))
              , IterStar(
                  CharClass(
                    Simple(
                      Present(
                        Conc(Range(Numeric("\\48"), Numeric("\\57")), Numeric("\\95"))
                      )
                    )
                  )
                )
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("IntegerLiteral")
          , Rhs(
              [ Opt(Lit("\"-\""))
              , Alt(Lit("\"0x\""), Lit("\"0X\""))
              , CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\48"), Numeric("\\57"))
                      , Conc(
                          Range(Numeric("\\65"), Numeric("\\70"))
                        , Range(Numeric("\\97"), Numeric("\\102"))
                        )
                      )
                    )
                  )
                )
              , IterStar(
                  CharClass(
                    Simple(
                      Present(
                        Conc(
                          Range(Numeric("\\48"), Numeric("\\57"))
                        , Conc(
                            Range(Numeric("\\65"), Numeric("\\70"))
                          , Conc(Numeric("\\95"), Range(Numeric("\\97"), Numeric("\\102")))
                          )
                        )
                      )
                    )
                  )
                )
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("IntegerLiteral")
          , Rhs(
              [ Opt(Lit("\"-\""))
              , Alt(Lit("\"0o\""), Lit("\"0O\""))
              , CharClass(Simple(Present(Range(Numeric("\\48"), Numeric("\\55")))))
              , IterStar(
                  CharClass(
                    Simple(
                      Present(
                        Conc(Range(Numeric("\\48"), Numeric("\\55")), Numeric("\\95"))
                      )
                    )
                  )
                )
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("IntegerLiteral")
          , Rhs(
              [ Opt(Lit("\"-\""))
              , Alt(Lit("\"0b\""), Lit("\"0B\""))
              , CharClass(Simple(Present(Range(Numeric("\\48"), Numeric("\\49")))))
              , IterStar(
                  CharClass(
                    Simple(
                      Present(
                        Conc(Range(Numeric("\\48"), Numeric("\\49")), Numeric("\\95"))
                      )
                    )
                  )
                )
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("PositiveInt")
          , Rhs(
              [ CharClass(Simple(Present(Range(Numeric("\\48"), Numeric("\\57")))))
              , IterStar(
                  CharClass(
                    Simple(
                      Present(
                        Conc(Range(Numeric("\\48"), Numeric("\\57")), Numeric("\\95"))
                      )
                    )
                  )
                )
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("PositiveInt")
          , Rhs(
              [ Alt(Lit("\"0x\""), Lit("\"0X\""))
              , CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\48"), Numeric("\\57"))
                      , Conc(
                          Range(Numeric("\\65"), Numeric("\\70"))
                        , Range(Numeric("\\97"), Numeric("\\102"))
                        )
                      )
                    )
                  )
                )
              , IterStar(
                  CharClass(
                    Simple(
                      Present(
                        Conc(
                          Range(Numeric("\\48"), Numeric("\\57"))
                        , Conc(
                            Range(Numeric("\\65"), Numeric("\\70"))
                          , Conc(Numeric("\\95"), Range(Numeric("\\97"), Numeric("\\102")))
                          )
                        )
                      )
                    )
                  )
                )
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("PositiveInt")
          , Rhs(
              [ Alt(Lit("\"0o\""), Lit("\"0O\""))
              , CharClass(Simple(Present(Range(Numeric("\\48"), Numeric("\\55")))))
              , IterStar(
                  CharClass(
                    Simple(
                      Present(
                        Conc(Range(Numeric("\\48"), Numeric("\\55")), Numeric("\\95"))
                      )
                    )
                  )
                )
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("PositiveInt")
          , Rhs(
              [ Alt(Lit("\"0b\""), Lit("\"0B\""))
              , CharClass(Simple(Present(Range(Numeric("\\48"), Numeric("\\49")))))
              , IterStar(
                  CharClass(
                    Simple(
                      Present(
                        Conc(Range(Numeric("\\48"), Numeric("\\49")), Numeric("\\95"))
                      )
                    )
                  )
                )
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("SpecialInt")
          , Rhs(
              [ CharClass(Simple(Present(Range(Numeric("\\48"), Numeric("\\57")))))
              , IterStar(
                  CharClass(
                    Simple(
                      Present(
                        Conc(Range(Numeric("\\48"), Numeric("\\57")), Numeric("\\95"))
                      )
                    )
                  )
                )
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("SpecialInt")
          , Rhs(
              [ Alt(Lit("\"0x\""), Lit("\"0X\""))
              , CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\48"), Numeric("\\57"))
                      , Conc(
                          Range(Numeric("\\65"), Numeric("\\70"))
                        , Range(Numeric("\\97"), Numeric("\\102"))
                        )
                      )
                    )
                  )
                )
              , IterStar(
                  CharClass(
                    Simple(
                      Present(
                        Conc(
                          Range(Numeric("\\48"), Numeric("\\57"))
                        , Conc(
                            Range(Numeric("\\65"), Numeric("\\70"))
                          , Conc(Numeric("\\95"), Range(Numeric("\\97"), Numeric("\\102")))
                          )
                        )
                      )
                    )
                  )
                )
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("SpecialInt")
          , Rhs(
              [ Alt(Lit("\"0o\""), Lit("\"0O\""))
              , CharClass(Simple(Present(Range(Numeric("\\48"), Numeric("\\55")))))
              , IterStar(
                  CharClass(
                    Simple(
                      Present(
                        Conc(Range(Numeric("\\48"), Numeric("\\55")), Numeric("\\95"))
                      )
                    )
                  )
                )
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("SpecialInt")
          , Rhs(
              [ Alt(Lit("\"0b\""), Lit("\"0B\""))
              , CharClass(Simple(Present(Range(Numeric("\\48"), Numeric("\\49")))))
              , IterStar(
                  CharClass(
                    Simple(
                      Present(
                        Conc(Range(Numeric("\\48"), Numeric("\\49")), Numeric("\\95"))
                      )
                    )
                  )
                )
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("Int32Literal")
          , Rhs(
              [Sort("SpecialInt"), CharClass(Simple(Present(Numeric("\\108"))))]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("Int64Literal")
          , Rhs(
              [Sort("SpecialInt"), CharClass(Simple(Present(Numeric("\\76"))))]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("NativeIntLiteral")
          , Rhs(
              [Sort("SpecialInt"), CharClass(Simple(Present(Numeric("\\110"))))]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("NegativeInt32")
          , Rhs([Lit("\"-\""), Sort("Int32Literal")])
          , NoAttrs()
          )
        , SdfProduction(
            Sort("NegativeInt64")
          , Rhs([Lit("\"-\""), Sort("Int64Literal")])
          , NoAttrs()
          )
        , SdfProduction(
            Sort("NegativeNativeInt")
          , Rhs([Lit("\"-\""), Sort("NativeIntLiteral")])
          , NoAttrs()
          )
        , SdfProduction(
            Sort("NegativeInt")
          , Rhs([Lit("\"-\""), Sort("PositiveInt")])
          , NoAttrs()
          )
        , SdfProduction(
            Sort("PositiveFloat")
          , Rhs(
              [ CharClass(Simple(Present(Range(Numeric("\\48"), Numeric("\\57")))))
              , IterStar(
                  CharClass(
                    Simple(
                      Present(
                        Conc(Range(Numeric("\\48"), Numeric("\\57")), Numeric("\\95"))
                      )
                    )
                  )
                )
              , CharClass(Simple(Present(Conc(Numeric("\\69"), Numeric("\\101")))))
              , Opt(
                  CharClass(Simple(Present(Conc(Numeric("\\43"), Numeric("\\45")))))
                )
              , CharClass(Simple(Present(Range(Numeric("\\48"), Numeric("\\57")))))
              , IterStar(
                  CharClass(
                    Simple(
                      Present(
                        Conc(Range(Numeric("\\48"), Numeric("\\57")), Numeric("\\95"))
                      )
                    )
                  )
                )
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("PositiveFloat")
          , Rhs(
              [ CharClass(Simple(Present(Range(Numeric("\\48"), Numeric("\\57")))))
              , IterStar(
                  CharClass(
                    Simple(
                      Present(
                        Conc(Range(Numeric("\\48"), Numeric("\\57")), Numeric("\\95"))
                      )
                    )
                  )
                )
              , Lit("\".\"")
              , IterStar(
                  CharClass(
                    Simple(
                      Present(
                        Conc(Range(Numeric("\\48"), Numeric("\\57")), Numeric("\\95"))
                      )
                    )
                  )
                )
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("PositiveFloat")
          , Rhs(
              [ CharClass(Simple(Present(Range(Numeric("\\48"), Numeric("\\57")))))
              , IterStar(
                  CharClass(
                    Simple(
                      Present(
                        Conc(Range(Numeric("\\48"), Numeric("\\57")), Numeric("\\95"))
                      )
                    )
                  )
                )
              , Lit("\".\"")
              , IterStar(
                  CharClass(
                    Simple(
                      Present(
                        Conc(Range(Numeric("\\48"), Numeric("\\57")), Numeric("\\95"))
                      )
                    )
                  )
                )
              , CharClass(Simple(Present(Conc(Numeric("\\69"), Numeric("\\101")))))
              , Opt(
                  CharClass(Simple(Present(Conc(Numeric("\\43"), Numeric("\\45")))))
                )
              , CharClass(Simple(Present(Range(Numeric("\\48"), Numeric("\\57")))))
              , IterStar(
                  CharClass(
                    Simple(
                      Present(
                        Conc(Range(Numeric("\\48"), Numeric("\\57")), Numeric("\\95"))
                      )
                    )
                  )
                )
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("NegativeFloat")
          , Rhs([Lit("\"-\""), Sort("PositiveFloat")])
          , NoAttrs()
          )
        , SdfProduction(
            Sort("FloatLiteral")
          , Rhs(
              [ Opt(Lit("\"-\""))
              , CharClass(Simple(Present(Range(Numeric("\\48"), Numeric("\\57")))))
              , IterStar(
                  CharClass(
                    Simple(
                      Present(
                        Conc(Range(Numeric("\\48"), Numeric("\\57")), Numeric("\\95"))
                      )
                    )
                  )
                )
              , CharClass(Simple(Present(Conc(Numeric("\\69"), Numeric("\\101")))))
              , Opt(
                  CharClass(Simple(Present(Conc(Numeric("\\43"), Numeric("\\45")))))
                )
              , CharClass(Simple(Present(Range(Numeric("\\48"), Numeric("\\57")))))
              , IterStar(
                  CharClass(
                    Simple(
                      Present(
                        Conc(Range(Numeric("\\48"), Numeric("\\57")), Numeric("\\95"))
                      )
                    )
                  )
                )
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("FloatLiteral")
          , Rhs(
              [ Opt(Lit("\"-\""))
              , CharClass(Simple(Present(Range(Numeric("\\48"), Numeric("\\57")))))
              , IterStar(
                  CharClass(
                    Simple(
                      Present(
                        Conc(Range(Numeric("\\48"), Numeric("\\57")), Numeric("\\95"))
                      )
                    )
                  )
                )
              , Lit("\".\"")
              , IterStar(
                  CharClass(
                    Simple(
                      Present(
                        Conc(Range(Numeric("\\48"), Numeric("\\57")), Numeric("\\95"))
                      )
                    )
                  )
                )
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("FloatLiteral")
          , Rhs(
              [ Opt(Lit("\"-\""))
              , CharClass(Simple(Present(Range(Numeric("\\48"), Numeric("\\57")))))
              , IterStar(
                  CharClass(
                    Simple(
                      Present(
                        Conc(Range(Numeric("\\48"), Numeric("\\57")), Numeric("\\95"))
                      )
                    )
                  )
                )
              , Lit("\".\"")
              , IterStar(
                  CharClass(
                    Simple(
                      Present(
                        Conc(Range(Numeric("\\48"), Numeric("\\57")), Numeric("\\95"))
                      )
                    )
                  )
                )
              , CharClass(Simple(Present(Conc(Numeric("\\69"), Numeric("\\101")))))
              , Opt(
                  CharClass(Simple(Present(Conc(Numeric("\\43"), Numeric("\\45")))))
                )
              , CharClass(Simple(Present(Range(Numeric("\\48"), Numeric("\\57")))))
              , IterStar(
                  CharClass(
                    Simple(
                      Present(
                        Conc(Range(Numeric("\\48"), Numeric("\\57")), Numeric("\\95"))
                      )
                    )
                  )
                )
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("CharLiteral")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\39"))))
              , Alt(Sort("RegularChar"), Sort("EscapeSequence"))
              , CharClass(Simple(Present(Numeric("\\39"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("EscapeSequence")
          , Rhs(
              [ Sequence(
                  CharClass(Simple(Present(Numeric("\\92"))))
                , [ CharClass(
                      Simple(
                        Present(
                          Conc(
                            Numeric("\\32")
                          , Conc(
                              Numeric("\\34")
                            , Conc(
                                Numeric("\\39")
                              , Conc(
                                  Numeric("\\92")
                                , Conc(
                                    Numeric("\\98")
                                  , Conc(Numeric("\\110"), Conc(Numeric("\\114"), Numeric("\\116")))
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  ]
                )
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("EscapeSequence")
          , Rhs(
              [ Sequence(
                  CharClass(Simple(Present(Numeric("\\92"))))
                , [ CharClass(Simple(Present(Range(Numeric("\\48"), Numeric("\\57")))))
                  , CharClass(Simple(Present(Range(Numeric("\\48"), Numeric("\\57")))))
                  , CharClass(Simple(Present(Range(Numeric("\\48"), Numeric("\\57")))))
                  ]
                )
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("EscapeSequence")
          , Rhs(
              [ Sequence(
                  CharClass(Simple(Present(Numeric("\\92"))))
                , [ CharClass(Simple(Present(Numeric("\\120"))))
                  , CharClass(
                      Simple(
                        Present(
                          Conc(
                            Range(Numeric("\\48"), Numeric("\\57"))
                          , Conc(
                              Range(Numeric("\\65"), Numeric("\\70"))
                            , Range(Numeric("\\97"), Numeric("\\102"))
                            )
                          )
                        )
                      )
                    )
                  , CharClass(
                      Simple(
                        Present(
                          Conc(
                            Range(Numeric("\\48"), Numeric("\\57"))
                          , Conc(
                              Range(Numeric("\\65"), Numeric("\\70"))
                            , Range(Numeric("\\97"), Numeric("\\102"))
                            )
                          )
                        )
                      )
                    )
                  ]
                )
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("StringLiteral")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\34"))))
              , IterStar(Sort("StringChar"))
              , CharClass(Simple(Present(Numeric("\\34"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(Sort("StringChar"), Rhs([Sort("RegularCharStr")]), NoAttrs())
        , SdfProduction(Sort("StringChar"), Rhs([Sort("EscapeSequence")]), NoAttrs())
        , SdfProduction(
            Sort("StringChar")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\92"))))
              , CharClass(Simple(Present(Numeric("\\10"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("RegularChar")
          , Rhs(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\0"), Numeric("\\38"))
                      , Conc(
                          Range(Numeric("\\40"), Numeric("\\91"))
                        , Range(Numeric("\\93"), Numeric("\\255"))
                        )
                      )
                    )
                  )
                )
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("RegularCharStr")
          , Rhs(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\0"), Numeric("\\33"))
                      , Conc(
                          Range(Numeric("\\35"), Numeric("\\91"))
                        , Range(Numeric("\\93"), Numeric("\\255"))
                        )
                      )
                    )
                  )
                )
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("OperatorCharList")
          , Rhs(
              [ Iter(
                  Alt(
                    Sort("HashInfixSymbol")
                  , Alt(
                      Lit("\"!\"")
                    , Alt(
                        Lit("\"$\"")
                      , Alt(
                          Lit("\"%\"")
                        , Alt(
                            Lit("\"&\"")
                          , Alt(
                              Lit("\"*\"")
                            , Alt(
                                Lit("\"+\"")
                              , Alt(
                                  Lit("\"-\"")
                                , Alt(
                                    Lit("\".\"")
                                  , Alt(
                                      Lit("\"/\"")
                                    , Alt(
                                        Lit("\":\"")
                                      , Alt(
                                          Lit("\"<\"")
                                        , Alt(
                                            Lit("\"=\"")
                                          , Alt(
                                              Lit("\">\"")
                                            , Alt(
                                                Lit("\"?\"")
                                              , Alt(
                                                  Lit("\"@\"")
                                                , Alt(Lit("\"|\""), Alt(Lit("\"~\""), Lit("\"^\"")))
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("OperatorChar")
          , Rhs(
              [ Alt(
                  Lit("\"!\"")
                , Alt(
                    Lit("\"$\"")
                  , Alt(
                      Lit("\"%\"")
                    , Alt(
                        Lit("\"&\"")
                      , Alt(
                          Lit("\"*\"")
                        , Alt(
                            Lit("\"+\"")
                          , Alt(
                              Lit("\"-\"")
                            , Alt(
                                Lit("\".\"")
                              , Alt(
                                  Lit("\"/\"")
                                , Alt(
                                    Lit("\":\"")
                                  , Alt(
                                      Lit("\"<\"")
                                    , Alt(
                                        Lit("\"=\"")
                                      , Alt(
                                          Lit("\">\"")
                                        , Alt(
                                            Lit("\"?\"")
                                          , Alt(
                                              Lit("\"@\"")
                                            , Alt(Lit("\"|\""), Alt(Lit("\"~\""), Lit("\"^\"")))
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("PrefixSymbol")
          , Rhs([Lit("\"!\""), IterStar(Sort("OperatorChar"))])
          , NoAttrs()
          )
        , SdfProduction(
            Sort("PrefixSymbol")
          , Rhs([Lit("\"!\""), Lit("\"=\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("PrefixSymbol")
          , Rhs(
              [Alt(Lit("\"?\""), Lit("\"~\"")), Iter(Sort("OperatorChar"))]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("Label")
          , Rhs([Lit("\"~\""), Sort("LowerCaseIdent")])
          , NoAttrs()
          )
        , SdfProduction(
            Sort("LabelColon")
          , Rhs([Lit("\"~\""), Sort("LowerCaseIdent"), Lit("\":\"")])
          , NoAttrs()
          )
        , SdfProduction(
            Sort("OptLabel")
          , Rhs([Lit("\"?\""), Sort("LowerCaseIdent")])
          , NoAttrs()
          )
        , SdfProduction(
            Sort("OptLabelColon")
          , Rhs([Lit("\"?\""), Sort("LowerCaseIdent"), Lit("\":\"")])
          , NoAttrs()
          )
        , SdfProduction(
            Sort("InfixSymbol1")
          , Rhs(
              [ Alt(
                  Lit("\"lsl\"")
                , Alt(Lit("\"lsr\""), Alt(Lit("\"asr\""), Lit("\"**\"")))
                )
              , IterStar(Sort("OperatorChar"))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("InfixSymbol2")
          , Rhs(
              [ Alt(
                  Lit("\"mod\"")
                , Alt(
                    Lit("\"land\"")
                  , Alt(
                      Lit("\"lor\"")
                    , Alt(
                        Lit("\"lxor\"")
                      , Alt(Lit("\"/\""), Alt(Lit("\"%\""), Lit("\"*\"")))
                      )
                    )
                  )
                )
              , IterStar(Sort("OperatorChar"))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("InfixSymbol3")
          , Rhs(
              [Alt(Lit("\"+\""), Lit("\"-\"")), IterStar(Sort("OperatorChar"))]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("InfixSymbol4")
          , Rhs(
              [Alt(Lit("\"@\""), Lit("\"^\"")), IterStar(Sort("OperatorChar"))]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("InfixSymbol5")
          , Rhs(
              [ Alt(
                  Lit("\"=\"")
                , Alt(
                    Lit("\"<\"")
                  , Alt(
                      Lit("\">\"")
                    , Alt(Lit("\"|\""), Alt(Lit("\"&\""), Lit("\"$\"")))
                    )
                  )
                )
              , IterStar(Sort("OperatorChar"))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("InfixSymbol6")
          , Rhs([Alt(Sort("AND"), Lit("\"&&\""))])
          , NoAttrs()
          )
        , SdfProduction(
            Sort("InfixSymbol7")
          , Rhs([Alt(Lit("\"||\""), Lit("\"or\""))])
          , NoAttrs()
          )
        , SdfProduction(Sort("InfixSymbol8"), Rhs([Lit("\":=\"")]), NoAttrs())
        , SdfProduction(
            Sort("HashInfixSymbol")
          , Rhs([Lit("\"#\""), Iter(Sort("OperatorChar"))])
          , NoAttrs()
          )
        , SdfProduction(Sort("AND"), Rhs([Lit("\"&\"")]), NoAttrs())
        , SdfProduction(
            Sort("InfixSymbol1")
          , Rhs([Lit("\")\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("InfixSymbol2")
          , Rhs([Lit("\"**\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("InfixSymbol3")
          , Rhs([Lit("\"->\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("InfixSymbol5")
          , Rhs([Lit("\"&\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("InfixSymbol5")
          , Rhs([Lit("\"&&\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("InfixSymbol5")
          , Rhs([Lit("\"<-\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("InfixSymbol5")
          , Rhs([Lit("\"|\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("InfixSymbol5")
          , Rhs([Lit("\"||\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("Keyword")
          , Rhs(
              [ Alt(
                  Lit("\"_\"")
                , Alt(
                    Lit("\"and\"")
                  , Alt(
                      Lit("\"as\"")
                    , Alt(
                        Lit("\"assert\"")
                      , Alt(
                          Lit("\"asr\"")
                        , Alt(
                            Lit("\"begin\"")
                          , Alt(
                              Lit("\"class\"")
                            , Alt(
                                Lit("\"constraint\"")
                              , Alt(
                                  Lit("\"do\"")
                                , Alt(
                                    Lit("\"done\"")
                                  , Alt(
                                      Lit("\"downto\"")
                                    , Alt(
                                        Lit("\"else\"")
                                      , Alt(
                                          Lit("\"end\"")
                                        , Alt(
                                            Lit("\"exception\"")
                                          , Alt(
                                              Lit("\"external\"")
                                            , Alt(
                                                Lit("\"false\"")
                                              , Alt(
                                                  Lit("\"for\"")
                                                , Alt(
                                                    Lit("\"fun\"")
                                                  , Alt(
                                                      Lit("\"function\"")
                                                    , Alt(
                                                        Lit("\"functor\"")
                                                      , Alt(
                                                          Lit("\"if\"")
                                                        , Alt(
                                                            Lit("\"in\"")
                                                          , Alt(
                                                              Lit("\"include\"")
                                                            , Alt(
                                                                Lit("\"inherit\"")
                                                              , Alt(
                                                                  Lit("\"initializer\"")
                                                                , Alt(
                                                                    Lit("\"land\"")
                                                                  , Alt(
                                                                      Lit("\"lazy\"")
                                                                    , Alt(
                                                                        Lit("\"let\"")
                                                                      , Alt(
                                                                          Lit("\"lor\"")
                                                                        , Alt(
                                                                            Lit("\"lsl\"")
                                                                          , Alt(
                                                                              Lit("\"lsr\"")
                                                                            , Alt(
                                                                                Lit("\"lxor\"")
                                                                              , Alt(
                                                                                  Lit("\"match\"")
                                                                                , Alt(
                                                                                    Lit("\"method\"")
                                                                                  , Alt(
                                                                                      Lit("\"mod\"")
                                                                                    , Alt(
                                                                                        Lit("\"module\"")
                                                                                      , Alt(
                                                                                          Lit("\"mutable\"")
                                                                                        , Alt(
                                                                                            Lit("\"new\"")
                                                                                          , Alt(
                                                                                              Lit("\"object\"")
                                                                                            , Alt(
                                                                                                Lit("\"of\"")
                                                                                              , Alt(
                                                                                                  Lit("\"open\"")
                                                                                                , Alt(
                                                                                                    Lit("\"or\"")
                                                                                                  , Alt(
                                                                                                      Lit("\"private\"")
                                                                                                    , Alt(
                                                                                                        Lit("\"rec\"")
                                                                                                      , Alt(
                                                                                                          Lit("\"sig\"")
                                                                                                        , Alt(
                                                                                                            Lit("\"struct\"")
                                                                                                          , Alt(
                                                                                                              Lit("\"then\"")
                                                                                                            , Alt(
                                                                                                                Lit("\"to\"")
                                                                                                              , Alt(
                                                                                                                  Lit("\"true\"")
                                                                                                                , Alt(
                                                                                                                    Lit("\"try\"")
                                                                                                                  , Alt(
                                                                                                                      Lit("\"type\"")
                                                                                                                    , Alt(
                                                                                                                        Lit("\"val\"")
                                                                                                                      , Alt(
                                                                                                                          Lit("\"virtual\"")
                                                                                                                        , Alt(Lit("\"when\""), Alt(Lit("\"while\""), Lit("\"with\"")))
                                                                                                                        )
                                                                                                                      )
                                                                                                                    )
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"_\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"in\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"and\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"as\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"assert\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"asr\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"begin\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"class\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"constraint\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"do\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"done\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"downto\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"else\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"end\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"exception\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"external\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"false\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"for\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"fun\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"function\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"functor\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"if\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"include\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"inherit\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"initializer\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"land\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"lazy\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"let\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"lor\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"lsl\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"lsr\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"lxor\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"match\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"method\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"mod\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"module\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"mutable\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"new\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"object\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"of\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"open\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"or\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"private\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"rec\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"sig\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"struct\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"then\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"to\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"true\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"try\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"type\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"val\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"virtual\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"when\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"while\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("LowerCaseIdent")
          , Rhs([Lit("\"with\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"_\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"in\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"and\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"as\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"assert\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"asr\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"begin\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"class\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"constraint\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"do\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"done\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"downto\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"else\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"end\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"exception\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"external\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"false\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"for\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"fun\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"function\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"functor\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"if\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"include\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"inherit\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"initializer\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"land\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"lazy\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"let\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"lor\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"lsl\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"lsr\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"lxor\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"match\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"method\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"mod\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"module\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"mutable\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"new\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"object\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"of\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"open\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"or\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"private\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"rec\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"sig\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"struct\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"then\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"to\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"true\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"try\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"type\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"val\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"virtual\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"when\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"while\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("CapitalizedIdent")
          , Rhs([Lit("\"with\"")])
          , Attrs([Reject()])
          )
        , SdfProduction(
            Sort("Comment")
          , Rhs(
              [ Lit("\"(*\"")
              , IterStar(
                  Alt(
                    CharClass(
                      Simple(
                        Present(
                          Conc(
                            Range(Numeric("\\0"), Numeric("\\39"))
                          , Conc(Numeric("\\41"), Range(Numeric("\\43"), Numeric("\\255")))
                          )
                        )
                      )
                    )
                  , Alt(
                      Sort("Comment")
                    , Alt(Sort("Star"), Alt(Sort("OpenParenthesis"), Sort("CommentLiteral")))
                    )
                  )
                )
              , Lit("\"*)\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("CommentLiteral")
          , Rhs(
              [ CharClass(Simple(Present(Numeric("\\34"))))
              , Alt(Lit("\"(*\""), Lit("\"(**\""))
              , CharClass(Simple(Present(Numeric("\\34"))))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(Sort("OpenParenthesis"), Rhs([Lit("\"(\"")]), NoAttrs())
        , SdfProduction(Sort("Star"), Rhs([Lit("\"*\"")]), NoAttrs())
        , SdfProduction(Layout(), Rhs([Sort("Comment")]), NoAttrs())
        , SdfProduction(
            Layout()
          , Rhs(
              [ CharClass(
                  Simple(
                    Present(
                      Conc(
                        Range(Numeric("\\9"), Numeric("\\10"))
                      , Conc(Numeric("\\13"), Numeric("\\32"))
                      )
                    )
                  )
                )
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("NoLineNumDirectiveLayout")
          , Rhs(
              [ IterStar(
                  Alt(
                    Sort("Comment")
                  , CharClass(Simple(Present(Conc(Numeric("\\9"), Numeric("\\32")))))
                  )
                )
              ]
            )
          , NoAttrs()
          )
        ]
      )
    )
  , SDFSection(
      Kernel(
        [ SdfProduction(
            Lex(Sort("LineNumDirective"))
          , Rhs(
              [ Lit("\"\\n\"")
              , Lit("\"#\"")
              , Lex(Sort("NoLineNumDirectiveLayout"))
              , Iter(
                  CharClass(Simple(Present(Range(Numeric("\\48"), Numeric("\\57")))))
                )
              , Lex(Sort("NoLineNumDirectiveLayout"))
              , Lit("\"\\\"\"")
              , Lex(IterStar(Sort("StringChar")))
              , Lit("\"\\\"\"")
              , Lex(Sort("NoLineNumDirectiveLayout"))
              , Lex(Sort("LineNumDirective"))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lex(Sort("LineNumDirective"))
          , Rhs(
              [ Lit("\"\\n\"")
              , Lit("\"#\"")
              , Lex(Sort("NoLineNumDirectiveLayout"))
              , Iter(
                  CharClass(Simple(Present(Range(Numeric("\\48"), Numeric("\\57")))))
                )
              , Lex(Sort("NoLineNumDirectiveLayout"))
              , Lex(Sort("LineNumDirective"))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lex(Sort("LineNumDirective"))
          , Rhs(
              [ Lit("\"\\n\"")
              , Lit("\"#\"")
              , Lex(Sort("NoLineNumDirectiveLayout"))
              , Iter(
                  CharClass(Simple(Present(Range(Numeric("\\48"), Numeric("\\57")))))
                )
              , Lex(Sort("NoLineNumDirectiveLayout"))
              , Lit("\"\\\"\"")
              , Lex(IterStar(Sort("StringChar")))
              , Lit("\"\\\"\"")
              , Lex(Sort("NoLineNumDirectiveLayout"))
              , Lit("\"\\n\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lex(Sort("LineNumDirective"))
          , Rhs(
              [ Lit("\"\\n\"")
              , Lit("\"#\"")
              , Lex(Sort("NoLineNumDirectiveLayout"))
              , Iter(
                  CharClass(Simple(Present(Range(Numeric("\\48"), Numeric("\\57")))))
                )
              , Lex(Sort("NoLineNumDirectiveLayout"))
              , Lit("\"\\n\"")
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Lex(Layout())
          , Rhs([Lex(Sort("LineNumDirective"))])
          , NoAttrs()
          )
        , SdfProduction(
            Sort("Start")
          , Rhs(
              [ Opt(Sort("InitialDirective"))
              , Cf(Opt(Layout()))
              , Cf(Sort("TopLevel"))
              , Cf(Opt(Layout()))
              , Opt(Sort("FinalDirective"))
              ]
            )
          , Attrs(
              [Term(
                 Default(Appl(Unquoted("ast"), [Fun(Quoted("\"<2>\""))]))
               )]
            )
          )
        , SdfProduction(
            Sort("Start")
          , Rhs(
              [ Lit("\"#\"")
              , Lex(Sort("NoLineNumDirectiveLayout"))
              , Iter(
                  CharClass(Simple(Present(Range(Numeric("\\48"), Numeric("\\57")))))
                )
              ]
            )
          , Attrs(
              [Term(
                 Default(Appl(Unquoted("ast"), [Fun(Quoted("\"TopLevelEmpty()\""))]))
               )]
            )
          )
        , SdfProduction(
            Sort("Start")
          , Rhs(
              [ Lit("\"#\"")
              , Lex(Sort("NoLineNumDirectiveLayout"))
              , Iter(
                  CharClass(Simple(Present(Range(Numeric("\\48"), Numeric("\\57")))))
                )
              , Lit("\"\\\"\"")
              , Lex(IterStar(Sort("StringChar")))
              , Lit("\"\\\"\"")
              ]
            )
          , Attrs(
              [Term(
                 Default(Appl(Unquoted("ast"), [Fun(Quoted("\"TopLevelEmpty()\""))]))
               )]
            )
          )
        , SdfProduction(
            Sort("InitialDirective")
          , Rhs(
              [ Lit("\"#\"")
              , Lex(Sort("NoLineNumDirectiveLayout"))
              , Iter(
                  CharClass(Simple(Present(Range(Numeric("\\48"), Numeric("\\57")))))
                )
              , Lex(Sort("NoLineNumDirectiveLayout"))
              , Lit("\"\\n\"")
              , Opt(Sort("InitialDirective"))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("InitialDirective")
          , Rhs(
              [ Lit("\"#\"")
              , Lex(Sort("NoLineNumDirectiveLayout"))
              , Iter(
                  CharClass(Simple(Present(Range(Numeric("\\48"), Numeric("\\57")))))
                )
              , Lex(Sort("NoLineNumDirectiveLayout"))
              , Lit("\"\\\"\"")
              , Lex(IterStar(Sort("StringChar")))
              , Lit("\"\\\"\"")
              , Lit("\"\\n\"")
              , Opt(Sort("InitialDirective"))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("FinalDirective")
          , Rhs(
              [ Lit("\"#\"")
              , Lex(Sort("NoLineNumDirectiveLayout"))
              , Iter(
                  CharClass(Simple(Present(Range(Numeric("\\48"), Numeric("\\57")))))
                )
              , Lex(Sort("NoLineNumDirectiveLayout"))
              ]
            )
          , NoAttrs()
          )
        , SdfProduction(
            Sort("FinalDirective")
          , Rhs(
              [ Lit("\"#\"")
              , Lex(Sort("NoLineNumDirectiveLayout"))
              , Iter(
                  CharClass(Simple(Present(Range(Numeric("\\48"), Numeric("\\57")))))
                )
              , Lex(Sort("NoLineNumDirectiveLayout"))
              , Lit("\"\\\"\"")
              , Lex(IterStar(Sort("StringChar")))
              , Lit("\"\\\"\"")
              ]
            )
          , NoAttrs()
          )
        ]
      )
    )
  , SDFSection(
      LexicalRestrictions(
        [ Follow(
            [Sort("InitialDirective")]
          , Single(CharClass(Simple(Present(Numeric("\\34")))))
          )
        , Follow(
            [Sort("NoLineNumDirectiveLayout")]
          , Single(
              CharClass(Simple(Present(Conc(Numeric("\\9"), Numeric("\\32")))))
            )
          )
        , Follow(
            [Sort("NoLineNumDirectiveLayout")]
          , Single(
              Seq(
                Simple(Present(Numeric("\\40")))
              , Single(CharClass(Simple(Present(Numeric("\\42")))))
              )
            )
          )
        , Follow(
            [Sort("OpenParenthesis")]
          , Single(CharClass(Simple(Present(Numeric("\\42")))))
          )
        , Follow(
            [Sort("Star")]
          , Single(CharClass(Simple(Present(Numeric("\\41")))))
          )
        , Follow(
            [Sort("LowerCaseIdent")]
          , Single(
              CharClass(
                Simple(
                  Present(
                    Conc(
                      Numeric("\\39")
                    , Conc(
                        Range(Numeric("\\48"), Numeric("\\57"))
                      , Conc(
                          Range(Numeric("\\65"), Numeric("\\90"))
                        , Conc(Numeric("\\95"), Range(Numeric("\\97"), Numeric("\\122")))
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        , Follow(
            [Sort("CapitalizedIdent")]
          , Single(
              CharClass(
                Simple(
                  Present(
                    Conc(
                      Numeric("\\39")
                    , Conc(
                        Range(Numeric("\\48"), Numeric("\\57"))
                      , Conc(
                          Range(Numeric("\\65"), Numeric("\\90"))
                        , Conc(Numeric("\\95"), Range(Numeric("\\97"), Numeric("\\122")))
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        , Follow(
            [Sort("IntegerLiteral")]
          , Single(
              CharClass(
                Simple(
                  Present(
                    Conc(
                      Numeric("\\46")
                    , Conc(
                        Range(Numeric("\\48"), Numeric("\\57"))
                      , Conc(
                          Range(Numeric("\\65"), Numeric("\\70"))
                        , Conc(
                            Numeric("\\79")
                          , Conc(
                              Numeric("\\88")
                            , Conc(
                                Numeric("\\95")
                              , Conc(
                                  Range(Numeric("\\97"), Numeric("\\102"))
                                , Conc(Numeric("\\111"), Numeric("\\120"))
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        , Follow(
            [Sort("PositiveInt")]
          , Single(
              CharClass(
                Simple(
                  Present(
                    Conc(
                      Numeric("\\46")
                    , Conc(
                        Range(Numeric("\\48"), Numeric("\\57"))
                      , Conc(
                          Range(Numeric("\\65"), Numeric("\\70"))
                        , Conc(
                            Numeric("\\76")
                          , Conc(
                              Numeric("\\79")
                            , Conc(
                                Numeric("\\88")
                              , Conc(
                                  Numeric("\\95")
                                , Conc(
                                    Range(Numeric("\\97"), Numeric("\\102"))
                                  , Conc(
                                      Numeric("\\108")
                                    , Conc(Range(Numeric("\\110"), Numeric("\\111")), Numeric("\\120"))
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        , Follow(
            [Sort("SpecialInt")]
          , Single(
              CharClass(
                Simple(
                  Present(
                    Conc(
                      Numeric("\\46")
                    , Conc(
                        Range(Numeric("\\48"), Numeric("\\57"))
                      , Conc(
                          Range(Numeric("\\65"), Numeric("\\70"))
                        , Conc(
                            Numeric("\\79")
                          , Conc(
                              Numeric("\\88")
                            , Conc(
                                Numeric("\\95")
                              , Conc(
                                  Range(Numeric("\\97"), Numeric("\\102"))
                                , Conc(Numeric("\\111"), Numeric("\\120"))
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        , Follow(
            [Sort("PositiveFloat"), Sort("FloatLiteral")]
          , Single(
              CharClass(
                Simple(
                  Present(
                    Conc(
                      Range(Numeric("\\45"), Numeric("\\46"))
                    , Conc(
                        Range(Numeric("\\48"), Numeric("\\57"))
                      , Conc(Numeric("\\69"), Conc(Numeric("\\95"), Numeric("\\101")))
                      )
                    )
                  )
                )
              )
            )
          )
        , Follow(
            [ Sort("InfixSymbol1")
            , Sort("InfixSymbol2")
            , Sort("InfixSymbol3")
            , Sort("InfixSymbol4")
            , Sort("InfixSymbol5")
            ]
          , Single(
              CharClass(
                Simple(
                  Present(
                    Conc(
                      Numeric("\\33")
                    , Conc(
                        Range(Numeric("\\36"), Numeric("\\38"))
                      , Conc(
                          Range(Numeric("\\42"), Numeric("\\43"))
                        , Conc(
                            Range(Numeric("\\45"), Numeric("\\47"))
                          , Conc(
                              Numeric("\\58")
                            , Conc(
                                Numeric("\\60")
                              , Conc(
                                  Range(Numeric("\\62"), Numeric("\\64"))
                                , Conc(Numeric("\\94"), Conc(Numeric("\\124"), Numeric("\\126")))
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        , Follow(
            [Sort("HashInfixSymbol")]
          , Single(
              CharClass(
                Simple(
                  Present(
                    Conc(
                      Numeric("\\33")
                    , Conc(
                        Range(Numeric("\\35"), Numeric("\\38"))
                      , Conc(
                          Range(Numeric("\\42"), Numeric("\\43"))
                        , Conc(
                            Range(Numeric("\\45"), Numeric("\\47"))
                          , Conc(
                              Numeric("\\58")
                            , Conc(
                                Numeric("\\60")
                              , Conc(
                                  Range(Numeric("\\62"), Numeric("\\64"))
                                , Conc(Numeric("\\94"), Conc(Numeric("\\124"), Numeric("\\126")))
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        , Follow(
            [Sort("Label"), Sort("OptLabel")]
          , Single(CharClass(Simple(Present(Numeric("\\58")))))
          )
        , Follow(
            [Sort("PrefixSymbol")]
          , Single(
              CharClass(
                Simple(
                  Present(
                    Conc(
                      Numeric("\\33")
                    , Conc(
                        Range(Numeric("\\36"), Numeric("\\38"))
                      , Conc(
                          Range(Numeric("\\42"), Numeric("\\43"))
                        , Conc(
                            Range(Numeric("\\45"), Numeric("\\47"))
                          , Conc(
                              Numeric("\\58")
                            , Conc(
                                Numeric("\\60")
                              , Conc(
                                  Range(Numeric("\\62"), Numeric("\\64"))
                                , Conc(Numeric("\\94"), Conc(Numeric("\\124"), Numeric("\\126")))
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        , Follow(
            [Sort("AND")]
          , Single(CharClass(Simple(Present(Numeric("\\38")))))
          )
        , Follow(
            [ Lit("\"and\"")
            , Lit("\"as\"")
            , Lit("\"assert\"")
            , Lit("\"asr\"")
            , Lit("\"begin\"")
            , Lit("\"class\"")
            , Lit("\"constraint\"")
            , Lit("\"do\"")
            , Lit("\"done\"")
            , Lit("\"downto\"")
            , Lit("\"else\"")
            , Lit("\"end\"")
            , Lit("\"exception\"")
            , Lit("\"external\"")
            , Lit("\"false\"")
            , Lit("\"for\"")
            , Lit("\"fun\"")
            , Lit("\"function\"")
            , Lit("\"functor\"")
            , Lit("\"if\"")
            , Lit("\"include\"")
            , Lit("\"in\"")
            , Lit("\"inherit\"")
            , Lit("\"initializer\"")
            , Lit("\"land\"")
            , Lit("\"lazy\"")
            , Lit("\"let\"")
            , Lit("\"lor\"")
            , Lit("\"lsl\"")
            , Lit("\"lsr\"")
            , Lit("\"lxor\"")
            , Lit("\"match\"")
            , Lit("\"method\"")
            , Lit("\"mod\"")
            , Lit("\"module\"")
            , Lit("\"mutable\"")
            , Lit("\"new\"")
            , Lit("\"object\"")
            , Lit("\"of\"")
            , Lit("\"open\"")
            , Lit("\"or\"")
            , Lit("\"private\"")
            , Lit("\"prefix\"")
            , Lit("\"rec\"")
            , Lit("\"sig\"")
            , Lit("\"struct\"")
            , Lit("\"then\"")
            , Lit("\"to\"")
            , Lit("\"true\"")
            , Lit("\"try\"")
            , Lit("\"type\"")
            , Lit("\"val\"")
            , Lit("\"value\"")
            , Lit("\"virtual\"")
            , Lit("\"where\"")
            , Lit("\"while\"")
            , Lit("\"with\"")
            ]
          , Single(
              CharClass(
                Simple(
                  Present(
                    Conc(
                      Range(Numeric("\\48"), Numeric("\\57"))
                    , Conc(
                        Range(Numeric("\\65"), Numeric("\\90"))
                      , Conc(Numeric("\\95"), Range(Numeric("\\97"), Numeric("\\122")))
                      )
                    )
                  )
                )
              )
            )
          )
        , Follow(
            [Lit("\"<\"")]
          , Single(CharClass(Simple(Present(Numeric("\\45")))))
          )
        , Follow(
            [Lit("\"[\"")]
          , Single(CharClass(Simple(Present(Numeric("\\124")))))
          )
        , Follow(
            [Lit("\"|\"")]
          , Single(CharClass(Simple(Present(Numeric("\\93")))))
          )
        , Follow(
            [Lit("\";\"")]
          , Single(CharClass(Simple(Present(Numeric("\\59")))))
          )
        , Follow(
            [Lit("\"_\"")]
          , Single(CharClass(Simple(Present(Numeric("\\95")))))
          )
        ]
      )
    )
  , SDFSection(
      ContextFreeRestrictions(
        [ Follow(
            [Opt(Layout())]
          , Single(
              CharClass(
                Simple(
                  Present(
                    Conc(
                      Range(Numeric("\\9"), Numeric("\\10"))
                    , Conc(Numeric("\\13"), Numeric("\\32"))
                    )
                  )
                )
              )
            )
          )
        , Follow(
            [Opt(Layout())]
          , Single(
              Seq(
                Simple(Present(Numeric("\\40")))
              , Single(CharClass(Simple(Present(Numeric("\\42")))))
              )
            )
          )
        ]
      )
    )
  ]
)